{"version":3,"file":"vue-plyr.min.js","sources":["../node_modules/plyr/src/js/plyr.js","../src/index.js","../src/plyr-video.vue","../src/plyr-youtube.vue","../src/plyr-vimeo.vue"],"sourcesContent":["// ==========================================================================\n// Plyr\n// plyr.js v2.0.18\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n// Credits: http://paypal.github.io/accessible-html5-video-player/\n// ==========================================================================\n\n(function(root, factory) {\n    'use strict';\n    /*global define,module*/\n\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        // Node, CommonJS-like\n        module.exports = factory(root, document);\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define([], function() {\n            return factory(root, document);\n        });\n    } else {\n        // Browser globals (root is window)\n        root.plyr = factory(root, document);\n    }\n})(typeof window !== 'undefined' ? window : this, function(window, document) {\n    'use strict';\n\n    // Globals\n    var fullscreen,\n        scroll = { x: 0, y: 0 },\n        // Default config\n        defaults = {\n            enabled: true,\n            debug: false,\n            autoplay: false,\n            loop: false,\n            seekTime: 10,\n            volume: 10,\n            volumeMin: 0,\n            volumeMax: 10,\n            volumeStep: 1,\n            duration: null,\n            displayDuration: true,\n            loadSprite: true,\n            iconPrefix: 'plyr',\n            iconUrl: 'https://cdn.plyr.io/2.0.18/plyr.svg',\n            blankUrl: 'https://cdn.plyr.io/static/blank.mp4',\n            clickToPlay: true,\n            hideControls: true,\n            showPosterOnEnd: false,\n            disableContextMenu: true,\n            keyboardShorcuts: {\n                focused: true,\n                global: false,\n            },\n            tooltips: {\n                controls: false,\n                seek: true,\n            },\n            selectors: {\n                html5: 'video, audio',\n                embed: '[data-type]',\n                editable: 'input, textarea, select, [contenteditable]',\n                container: '.plyr',\n                controls: {\n                    container: null,\n                    wrapper: '.plyr__controls',\n                },\n                labels: '[data-plyr]',\n                buttons: {\n                    seek: '[data-plyr=\"seek\"]',\n                    play: '[data-plyr=\"play\"]',\n                    pause: '[data-plyr=\"pause\"]',\n                    restart: '[data-plyr=\"restart\"]',\n                    rewind: '[data-plyr=\"rewind\"]',\n                    forward: '[data-plyr=\"fast-forward\"]',\n                    mute: '[data-plyr=\"mute\"]',\n                    captions: '[data-plyr=\"captions\"]',\n                    fullscreen: '[data-plyr=\"fullscreen\"]',\n                },\n                volume: {\n                    input: '[data-plyr=\"volume\"]',\n                    display: '.plyr__volume--display',\n                },\n                progress: {\n                    container: '.plyr__progress',\n                    buffer: '.plyr__progress--buffer',\n                    played: '.plyr__progress--played',\n                },\n                captions: '.plyr__captions',\n                currentTime: '.plyr__time--current',\n                duration: '.plyr__time--duration',\n            },\n            classes: {\n                setup: 'plyr--setup',\n                ready: 'plyr--ready',\n                videoWrapper: 'plyr__video-wrapper',\n                embedWrapper: 'plyr__video-embed',\n                type: 'plyr--{0}',\n                stopped: 'plyr--stopped',\n                playing: 'plyr--playing',\n                muted: 'plyr--muted',\n                loading: 'plyr--loading',\n                hover: 'plyr--hover',\n                tooltip: 'plyr__tooltip',\n                hidden: 'plyr__sr-only',\n                hideControls: 'plyr--hide-controls',\n                isIos: 'plyr--is-ios',\n                isTouch: 'plyr--is-touch',\n                captions: {\n                    enabled: 'plyr--captions-enabled',\n                    active: 'plyr--captions-active',\n                },\n                fullscreen: {\n                    enabled: 'plyr--fullscreen-enabled',\n                    fallback: 'plyr--fullscreen-fallback',\n                    active: 'plyr--fullscreen-active',\n                },\n                tabFocus: 'tab-focus',\n            },\n            captions: {\n                defaultActive: false,\n            },\n            fullscreen: {\n                enabled: true,\n                fallback: true,\n                allowAudio: false,\n            },\n            storage: {\n                enabled: true,\n                key: 'plyr',\n            },\n            controls: ['play-large', 'play', 'progress', 'current-time', 'mute', 'volume', 'captions', 'fullscreen'],\n            i18n: {\n                restart: 'Restart',\n                rewind: 'Rewind {seektime} secs',\n                play: 'Play',\n                pause: 'Pause',\n                forward: 'Forward {seektime} secs',\n                played: 'played',\n                buffered: 'buffered',\n                currentTime: 'Current time',\n                duration: 'Duration',\n                volume: 'Volume',\n                toggleMute: 'Toggle Mute',\n                toggleCaptions: 'Toggle Captions',\n                toggleFullscreen: 'Toggle Fullscreen',\n                frameTitle: 'Player for {title}',\n            },\n            types: {\n                embed: ['youtube', 'vimeo', 'soundcloud'],\n                html5: ['video', 'audio'],\n            },\n            // URLs\n            urls: {\n                vimeo: {\n                    api: 'https://player.vimeo.com/api/player.js',\n                },\n                youtube: {\n                    api: 'https://www.youtube.com/iframe_api',\n                },\n                soundcloud: {\n                    api: 'https://w.soundcloud.com/player/api.js',\n                },\n            },\n            // Custom control listeners\n            listeners: {\n                seek: null,\n                play: null,\n                pause: null,\n                restart: null,\n                rewind: null,\n                forward: null,\n                mute: null,\n                volume: null,\n                captions: null,\n                fullscreen: null,\n            },\n            // Events to watch on HTML5 media elements\n            events: [\n                'ready',\n                'ended',\n                'progress',\n                'stalled',\n                'playing',\n                'waiting',\n                'canplay',\n                'canplaythrough',\n                'loadstart',\n                'loadeddata',\n                'loadedmetadata',\n                'timeupdate',\n                'volumechange',\n                'play',\n                'pause',\n                'error',\n                'seeking',\n                'seeked',\n                'emptied',\n            ],\n            // Logging\n            logPrefix: '[Plyr]',\n        };\n\n    // Credits: http://paypal.github.io/accessible-html5-video-player/\n    // Unfortunately, due to mixed support, UA sniffing is required\n    function _browserSniff() {\n        var ua = navigator.userAgent,\n            name = navigator.appName,\n            fullVersion = '' + parseFloat(navigator.appVersion),\n            majorVersion = parseInt(navigator.appVersion, 10),\n            nameOffset,\n            verOffset,\n            ix,\n            isIE = false,\n            isFirefox = false,\n            isChrome = false,\n            isSafari = false;\n\n        if (navigator.appVersion.indexOf('Windows NT') !== -1 && navigator.appVersion.indexOf('rv:11') !== -1) {\n            // MSIE 11\n            isIE = true;\n            name = 'IE';\n            fullVersion = '11';\n        } else if ((verOffset = ua.indexOf('MSIE')) !== -1) {\n            // MSIE\n            isIE = true;\n            name = 'IE';\n            fullVersion = ua.substring(verOffset + 5);\n        } else if ((verOffset = ua.indexOf('Chrome')) !== -1) {\n            // Chrome\n            isChrome = true;\n            name = 'Chrome';\n            fullVersion = ua.substring(verOffset + 7);\n        } else if ((verOffset = ua.indexOf('Safari')) !== -1) {\n            // Safari\n            isSafari = true;\n            name = 'Safari';\n            fullVersion = ua.substring(verOffset + 7);\n            if ((verOffset = ua.indexOf('Version')) !== -1) {\n                fullVersion = ua.substring(verOffset + 8);\n            }\n        } else if ((verOffset = ua.indexOf('Firefox')) !== -1) {\n            // Firefox\n            isFirefox = true;\n            name = 'Firefox';\n            fullVersion = ua.substring(verOffset + 8);\n        } else if ((nameOffset = ua.lastIndexOf(' ') + 1) < (verOffset = ua.lastIndexOf('/'))) {\n            // In most other browsers, 'name/version' is at the end of userAgent\n            name = ua.substring(nameOffset, verOffset);\n            fullVersion = ua.substring(verOffset + 1);\n\n            if (name.toLowerCase() === name.toUpperCase()) {\n                name = navigator.appName;\n            }\n        }\n\n        // Trim the fullVersion string at semicolon/space if present\n        if ((ix = fullVersion.indexOf(';')) !== -1) {\n            fullVersion = fullVersion.substring(0, ix);\n        }\n        if ((ix = fullVersion.indexOf(' ')) !== -1) {\n            fullVersion = fullVersion.substring(0, ix);\n        }\n\n        // Get major version\n        majorVersion = parseInt('' + fullVersion, 10);\n        if (isNaN(majorVersion)) {\n            fullVersion = '' + parseFloat(navigator.appVersion);\n            majorVersion = parseInt(navigator.appVersion, 10);\n        }\n\n        // Return data\n        return {\n            name: name,\n            version: majorVersion,\n            isIE: isIE,\n            isFirefox: isFirefox,\n            isChrome: isChrome,\n            isSafari: isSafari,\n            isIos: /(iPad|iPhone|iPod)/g.test(navigator.platform),\n            isIphone: /(iPhone|iPod)/g.test(navigator.userAgent),\n            isTouch: 'ontouchstart' in document.documentElement,\n        };\n    }\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplyr.com/test/h5mt.html\n    function _supportMime(plyr, mimeType) {\n        var media = plyr.media;\n\n        if (plyr.type === 'video') {\n            // Check type\n            switch (mimeType) {\n                case 'video/webm':\n                    return !!(media.canPlayType && media.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/no/, ''));\n                case 'video/mp4':\n                    return !!(media.canPlayType && media.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"').replace(/no/, ''));\n                case 'video/ogg':\n                    return !!(media.canPlayType && media.canPlayType('video/ogg; codecs=\"theora\"').replace(/no/, ''));\n            }\n        } else if (plyr.type === 'audio') {\n            // Check type\n            switch (mimeType) {\n                case 'audio/mpeg':\n                    return !!(media.canPlayType && media.canPlayType('audio/mpeg;').replace(/no/, ''));\n                case 'audio/ogg':\n                    return !!(media.canPlayType && media.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/no/, ''));\n                case 'audio/wav':\n                    return !!(media.canPlayType && media.canPlayType('audio/wav; codecs=\"1\"').replace(/no/, ''));\n            }\n        }\n\n        // If we got this far, we're stuffed\n        return false;\n    }\n\n    // Inject a script\n    function _injectScript(source) {\n        if (document.querySelectorAll('script[src=\"' + source + '\"]').length) {\n            return;\n        }\n\n        var tag = document.createElement('script');\n        tag.src = source;\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    }\n\n    // Element exists in an array\n    function _inArray(haystack, needle) {\n        return Array.prototype.indexOf && haystack.indexOf(needle) !== -1;\n    }\n\n    // Replace all\n    function _replaceAll(string, find, replace) {\n        return string.replace(new RegExp(find.replace(/([.*+?\\^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'), 'g'), replace);\n    }\n\n    // Wrap an element\n    function _wrap(elements, wrapper) {\n        // Convert `elements` to an array, if necessary.\n        if (!elements.length) {\n            elements = [elements];\n        }\n\n        // Loops backwards to prevent having to clone the wrapper on the\n        // first element (see `child` below).\n        for (var i = elements.length - 1; i >= 0; i--) {\n            var child = i > 0 ? wrapper.cloneNode(true) : wrapper;\n            var element = elements[i];\n\n            // Cache the current parent and sibling.\n            var parent = element.parentNode;\n            var sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n\n            return child;\n        }\n    }\n\n    // Unwrap an element\n    // http://plainjs.com/javascript/manipulation/unwrap-a-dom-element-35/\n    /*function _unwrap(wrapper) {\n        // Get the element's parent node\n        var parent = wrapper.parentNode;\n\n        // Move all children out of the element\n        while (wrapper.firstChild) {\n            parent.insertBefore(wrapper.firstChild, wrapper);\n        }\n\n        // Remove the empty element\n        parent.removeChild(wrapper);\n    }*/\n\n    // Remove an element\n    function _remove(element) {\n        if (!element) {\n            return;\n        }\n        element.parentNode.removeChild(element);\n    }\n\n    // Prepend child\n    function _prependChild(parent, element) {\n        parent.insertBefore(element, parent.firstChild);\n    }\n\n    // Set attributes\n    function _setAttributes(element, attributes) {\n        for (var key in attributes) {\n            element.setAttribute(key, _is.boolean(attributes[key]) && attributes[key] ? '' : attributes[key]);\n        }\n    }\n\n    // Insert a HTML element\n    function _insertElement(type, parent, attributes) {\n        // Create a new <element>\n        var element = document.createElement(type);\n\n        // Set all passed attributes\n        _setAttributes(element, attributes);\n\n        // Inject the new element\n        _prependChild(parent, element);\n    }\n\n    // Get a classname from selector\n    function _getClassname(selector) {\n        return selector.replace('.', '');\n    }\n\n    // Toggle class on an element\n    function _toggleClass(element, className, state) {\n        if (element) {\n            if (element.classList) {\n                element.classList[state ? 'add' : 'remove'](className);\n            } else {\n                var name = (' ' + element.className + ' ').replace(/\\s+/g, ' ').replace(' ' + className + ' ', '');\n                element.className = name + (state ? ' ' + className : '');\n            }\n        }\n    }\n\n    // Has class name\n    function _hasClass(element, className) {\n        if (element) {\n            if (element.classList) {\n                return element.classList.contains(className);\n            } else {\n                return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test(element.className);\n            }\n        }\n        return false;\n    }\n\n    // Element matches selector\n    function _matches(element, selector) {\n        var p = Element.prototype;\n\n        var f =\n            p.matches ||\n            p.webkitMatchesSelector ||\n            p.mozMatchesSelector ||\n            p.msMatchesSelector ||\n            function(s) {\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n            };\n\n        return f.call(element, selector);\n    }\n\n    // Bind along with custom handler\n    function _proxyListener(element, eventName, userListener, defaultListener, useCapture) {\n        if (userListener) {\n            // Register this before defaultListener\n            _on(\n                element,\n                eventName,\n                function(event) {\n                    userListener.apply(element, [event]);\n                },\n                useCapture\n            );\n        }\n        _on(\n            element,\n            eventName,\n            function(event) {\n                defaultListener.apply(element, [event]);\n            },\n            useCapture\n        );\n    }\n\n    // Toggle event listener\n    function _toggleListener(element, events, callback, toggle, useCapture) {\n        var eventList = events.split(' ');\n\n        // Whether the listener is a capturing listener or not\n        // Default to false\n        if (!_is.boolean(useCapture)) {\n            useCapture = false;\n        }\n\n        // If a nodelist is passed, call itself on each node\n        if (element instanceof NodeList) {\n            for (var x = 0; x < element.length; x++) {\n                if (element[x] instanceof Node) {\n                    _toggleListener(element[x], arguments[1], arguments[2], arguments[3]);\n                }\n            }\n            return;\n        }\n\n        // If a single node is passed, bind the event listener\n        for (var i = 0; i < eventList.length; i++) {\n            element[toggle ? 'addEventListener' : 'removeEventListener'](eventList[i], callback, useCapture);\n        }\n    }\n\n    // Bind event\n    function _on(element, events, callback, useCapture) {\n        if (element) {\n            _toggleListener(element, events, callback, true, useCapture);\n        }\n    }\n\n    // Unbind event\n    function _off(element, events, callback, useCapture) {\n        if (element) {\n            _toggleListener(element, events, callback, false, useCapture);\n        }\n    }\n\n    // Trigger event\n    function _event(element, type, bubbles, properties) {\n        // Bail if no element\n        if (!element || !type) {\n            return;\n        }\n\n        // Default bubbles to false\n        if (!_is.boolean(bubbles)) {\n            bubbles = false;\n        }\n\n        // Create and dispatch the event\n        var event = new CustomEvent(type, {\n            bubbles: bubbles,\n            detail: properties,\n        });\n\n        // Dispatch the event\n        element.dispatchEvent(event);\n    }\n\n    // Toggle aria-pressed state on a toggle button\n    // http://www.ssbbartgroup.com/blog/how-not-to-misuse-aria-states-properties-and-roles\n    function _toggleState(target, state) {\n        // Bail if no target\n        if (!target) {\n            return;\n        }\n\n        // Get state\n        state = _is.boolean(state) ? state : !target.getAttribute('aria-pressed');\n\n        // Set the attribute on target\n        target.setAttribute('aria-pressed', state);\n\n        return state;\n    }\n\n    // Get percentage\n    function _getPercentage(current, max) {\n        if (current === 0 || max === 0 || isNaN(current) || isNaN(max)) {\n            return 0;\n        }\n        return (current / max * 100).toFixed(2);\n    }\n\n    // Deep extend/merge destination object with N more objects\n    // http://andrewdupont.net/2009/08/28/deep-extending-objects-in-javascript/\n    // Removed call to arguments.callee (used explicit function name instead)\n    function _extend() {\n        // Get arguments\n        var objects = arguments;\n\n        // Bail if nothing to merge\n        if (!objects.length) {\n            return;\n        }\n\n        // Return first if specified but nothing to merge\n        if (objects.length === 1) {\n            return objects[0];\n        }\n\n        // First object is the destination\n        var destination = Array.prototype.shift.call(objects),\n            length = objects.length;\n\n        // Loop through all objects to merge\n        for (var i = 0; i < length; i++) {\n            var source = objects[i];\n\n            for (var property in source) {\n                if (source[property] && source[property].constructor && source[property].constructor === Object) {\n                    destination[property] = destination[property] || {};\n                    _extend(destination[property], source[property]);\n                } else {\n                    destination[property] = source[property];\n                }\n            }\n        }\n\n        return destination;\n    }\n\n    // Check variable types\n    var _is = {\n        object: function(input) {\n            return input !== null && typeof input === 'object';\n        },\n        array: function(input) {\n            return input !== null && (typeof input === 'object' && input.constructor === Array);\n        },\n        number: function(input) {\n            return input !== null && ((typeof input === 'number' && !isNaN(input - 0)) || (typeof input === 'object' && input.constructor === Number));\n        },\n        string: function(input) {\n            return input !== null && (typeof input === 'string' || (typeof input === 'object' && input.constructor === String));\n        },\n        boolean: function(input) {\n            return input !== null && typeof input === 'boolean';\n        },\n        nodeList: function(input) {\n            return input !== null && input instanceof NodeList;\n        },\n        htmlElement: function(input) {\n            return input !== null && input instanceof HTMLElement;\n        },\n        function: function(input) {\n            return input !== null && typeof input === 'function';\n        },\n        undefined: function(input) {\n            return input !== null && typeof input === 'undefined';\n        },\n    };\n\n    // Parse YouTube ID from url\n    function _parseYouTubeId(url) {\n        var regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n        return url.match(regex) ? RegExp.$2 : url;\n    }\n\n    // Parse Vimeo ID from url\n    function _parseVimeoId(url) {\n        var regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n        return url.match(regex) ? RegExp.$2 : url;\n    }\n\n    // Fullscreen API\n    function _fullscreen() {\n        var fullscreen = {\n                supportsFullScreen: false,\n                isFullScreen: function() {\n                    return false;\n                },\n                requestFullScreen: function() {},\n                cancelFullScreen: function() {},\n                fullScreenEventName: '',\n                element: null,\n                prefix: '',\n            },\n            browserPrefixes = 'webkit o moz ms khtml'.split(' ');\n\n        // Check for native support\n        if (!_is.undefined(document.cancelFullScreen)) {\n            fullscreen.supportsFullScreen = true;\n        } else {\n            // Check for fullscreen support by vendor prefix\n            for (var i = 0, il = browserPrefixes.length; i < il; i++) {\n                fullscreen.prefix = browserPrefixes[i];\n\n                if (!_is.undefined(document[fullscreen.prefix + 'CancelFullScreen'])) {\n                    fullscreen.supportsFullScreen = true;\n                    break;\n                } else if (!_is.undefined(document.msExitFullscreen) && document.msFullscreenEnabled) {\n                    // Special case for MS (when isn't it?)\n                    fullscreen.prefix = 'ms';\n                    fullscreen.supportsFullScreen = true;\n                    break;\n                }\n            }\n        }\n\n        // Update methods to do something useful\n        if (fullscreen.supportsFullScreen) {\n            // Yet again Microsoft awesomeness,\n            // Sometimes the prefix is 'ms', sometimes 'MS' to keep you on your toes\n            fullscreen.fullScreenEventName = fullscreen.prefix === 'ms' ? 'MSFullscreenChange' : fullscreen.prefix + 'fullscreenchange';\n\n            fullscreen.isFullScreen = function(element) {\n                if (_is.undefined(element)) {\n                    element = document.body;\n                }\n                switch (this.prefix) {\n                    case '':\n                        return document.fullscreenElement === element;\n                    case 'moz':\n                        return document.mozFullScreenElement === element;\n                    default:\n                        return document[this.prefix + 'FullscreenElement'] === element;\n                }\n            };\n            fullscreen.requestFullScreen = function(element) {\n                if (_is.undefined(element)) {\n                    element = document.body;\n                }\n                return this.prefix === ''\n                    ? element.requestFullScreen()\n                    : element[this.prefix + (this.prefix === 'ms' ? 'RequestFullscreen' : 'RequestFullScreen')]();\n            };\n            fullscreen.cancelFullScreen = function() {\n                return this.prefix === ''\n                    ? document.cancelFullScreen()\n                    : document[this.prefix + (this.prefix === 'ms' ? 'ExitFullscreen' : 'CancelFullScreen')]();\n            };\n            fullscreen.element = function() {\n                return this.prefix === '' ? document.fullscreenElement : document[this.prefix + 'FullscreenElement'];\n            };\n        }\n\n        return fullscreen;\n    }\n\n    // Local storage\n    var _storage = {\n        supported: (function() {\n            // Try to use it (it might be disabled, e.g. user is in private/porn mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            try {\n                // Add test item\n                window.localStorage.setItem('___test', 'OK');\n\n                // Get the test item\n                var result = window.localStorage.getItem('___test');\n\n                // Clean up\n                window.localStorage.removeItem('___test');\n\n                // Check if value matches\n                return result === 'OK';\n            } catch (e) {\n                return false;\n            }\n\n            return false;\n        })(),\n    };\n\n    // Player instance\n    function Plyr(media, config) {\n        var plyr = this,\n            timers = {},\n            api;\n\n        // Set media\n        plyr.media = media;\n        var original = media.cloneNode(true);\n\n        // Trigger events, with plyr instance passed\n        function _triggerEvent(element, type, bubbles, properties) {\n            _event(\n                element,\n                type,\n                bubbles,\n                _extend({}, properties, {\n                    plyr: api,\n                })\n            );\n        }\n\n        // Debugging\n        function _console(type, args) {\n            if (config.debug && window.console) {\n                args = Array.prototype.slice.call(args);\n\n                if (_is.string(config.logPrefix) && config.logPrefix.length) {\n                    args.unshift(config.logPrefix);\n                }\n\n                console[type].apply(console, args);\n            }\n        }\n        var _log = function() {\n                _console('log', arguments);\n            },\n            _warn = function() {\n                _console('warn', arguments);\n            };\n\n        // Log config options\n        _log('Config', config);\n\n        // Get icon URL\n        function _getIconUrl() {\n            return {\n                url: config.iconUrl,\n                // If you're using svg4everybody you don't need absolute paths\n                absolute: config.iconUrl.indexOf('http') === 0 || (plyr.browser.isIE && !window.svg4everybody),\n            };\n        }\n\n        // Build the default HTML\n        function _buildControls() {\n            // Create html array\n            var html = [],\n                iconUrl = _getIconUrl(),\n                iconPath = (!iconUrl.absolute ? iconUrl.url : '') + '#' + config.iconPrefix;\n\n            // Larger overlaid play button\n            if (_inArray(config.controls, 'play-large')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"play\" class=\"plyr__play-large\">',\n                    '<svg><use xlink:href=\"' + iconPath + '-play\" /></svg>',\n                    '<span class=\"plyr__sr-only\">' + config.i18n.play + '</span>',\n                    '</button>'\n                );\n            }\n\n            html.push('<div class=\"plyr__controls\">');\n\n            // Restart button\n            if (_inArray(config.controls, 'restart')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"restart\">',\n                    '<svg><use xlink:href=\"' + iconPath + '-restart\" /></svg>',\n                    '<span class=\"plyr__sr-only\">' + config.i18n.restart + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Rewind button\n            if (_inArray(config.controls, 'rewind')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"rewind\">',\n                    '<svg><use xlink:href=\"' + iconPath + '-rewind\" /></svg>',\n                    '<span class=\"plyr__sr-only\">' + config.i18n.rewind + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Play Pause button\n            // TODO: This should be a toggle button really?\n            if (_inArray(config.controls, 'play')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"play\">',\n                    '<svg><use xlink:href=\"' + iconPath + '-play\" /></svg>',\n                    '<span class=\"plyr__sr-only\">' + config.i18n.play + '</span>',\n                    '</button>',\n                    '<button type=\"button\" data-plyr=\"pause\">',\n                    '<svg><use xlink:href=\"' + iconPath + '-pause\" /></svg>',\n                    '<span class=\"plyr__sr-only\">' + config.i18n.pause + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Fast forward button\n            if (_inArray(config.controls, 'fast-forward')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"fast-forward\">',\n                    '<svg><use xlink:href=\"' + iconPath + '-fast-forward\" /></svg>',\n                    '<span class=\"plyr__sr-only\">' + config.i18n.forward + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Progress\n            if (_inArray(config.controls, 'progress')) {\n                // Create progress\n                html.push(\n                    '<span class=\"plyr__progress\">',\n                    '<label for=\"seek{id}\" class=\"plyr__sr-only\">Seek</label>',\n                    '<input id=\"seek{id}\" class=\"plyr__progress--seek\" type=\"range\" min=\"0\" max=\"100\" step=\"0.1\" value=\"0\" data-plyr=\"seek\">',\n                    '<progress class=\"plyr__progress--played\" max=\"100\" value=\"0\" role=\"presentation\"></progress>',\n                    '<progress class=\"plyr__progress--buffer\" max=\"100\" value=\"0\">',\n                    '<span>0</span>% ' + config.i18n.buffered,\n                    '</progress>'\n                );\n\n                // Seek tooltip\n                if (config.tooltips.seek) {\n                    html.push('<span class=\"plyr__tooltip\">00:00</span>');\n                }\n\n                // Close\n                html.push('</span>');\n            }\n\n            // Media current time display\n            if (_inArray(config.controls, 'current-time')) {\n                html.push(\n                    '<span class=\"plyr__time\">',\n                    '<span class=\"plyr__sr-only\">' + config.i18n.currentTime + '</span>',\n                    '<span class=\"plyr__time--current\">00:00</span>',\n                    '</span>'\n                );\n            }\n\n            // Media duration display\n            if (_inArray(config.controls, 'duration')) {\n                html.push(\n                    '<span class=\"plyr__time\">',\n                    '<span class=\"plyr__sr-only\">' + config.i18n.duration + '</span>',\n                    '<span class=\"plyr__time--duration\">00:00</span>',\n                    '</span>'\n                );\n            }\n\n            // Toggle mute button\n            if (_inArray(config.controls, 'mute')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"mute\">',\n                    '<svg class=\"icon--muted\"><use xlink:href=\"' + iconPath + '-muted\" /></svg>',\n                    '<svg><use xlink:href=\"' + iconPath + '-volume\" /></svg>',\n                    '<span class=\"plyr__sr-only\">' + config.i18n.toggleMute + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Volume range control\n            if (_inArray(config.controls, 'volume')) {\n                html.push(\n                    '<span class=\"plyr__volume\">',\n                    '<label for=\"volume{id}\" class=\"plyr__sr-only\">' + config.i18n.volume + '</label>',\n                    '<input id=\"volume{id}\" class=\"plyr__volume--input\" type=\"range\" min=\"' +\n                        config.volumeMin +\n                        '\" max=\"' +\n                        config.volumeMax +\n                        '\" value=\"' +\n                        config.volume +\n                        '\" data-plyr=\"volume\">',\n                    '<progress class=\"plyr__volume--display\" max=\"' + config.volumeMax + '\" value=\"' + config.volumeMin + '\" role=\"presentation\"></progress>',\n                    '</span>'\n                );\n            }\n\n            // Toggle captions button\n            if (_inArray(config.controls, 'captions')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"captions\">',\n                    '<svg class=\"icon--captions-on\"><use xlink:href=\"' + iconPath + '-captions-on\" /></svg>',\n                    '<svg><use xlink:href=\"' + iconPath + '-captions-off\" /></svg>',\n                    '<span class=\"plyr__sr-only\">' + config.i18n.toggleCaptions + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Toggle fullscreen button\n            if (_inArray(config.controls, 'fullscreen')) {\n                html.push(\n                    '<button type=\"button\" data-plyr=\"fullscreen\">',\n                    '<svg class=\"icon--exit-fullscreen\"><use xlink:href=\"' + iconPath + '-exit-fullscreen\" /></svg>',\n                    '<svg><use xlink:href=\"' + iconPath + '-enter-fullscreen\" /></svg>',\n                    '<span class=\"plyr__sr-only\">' + config.i18n.toggleFullscreen + '</span>',\n                    '</button>'\n                );\n            }\n\n            // Close everything\n            html.push('</div>');\n\n            return html.join('');\n        }\n\n        // Setup fullscreen\n        function _setupFullscreen() {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            if ((plyr.type !== 'audio' || config.fullscreen.allowAudio) && config.fullscreen.enabled) {\n                // Check for native support\n                var nativeSupport = fullscreen.supportsFullScreen;\n\n                if (nativeSupport || (config.fullscreen.fallback && !_inFrame())) {\n                    _log((nativeSupport ? 'Native' : 'Fallback') + ' fullscreen enabled');\n\n                    // Add styling hook\n                    if (!nativeSupport) {\n                        _toggleClass(plyr.container, config.classes.fullscreen.fallback, true);\n                    }\n\n                    // Add styling hook\n                    _toggleClass(plyr.container, config.classes.fullscreen.enabled, true);\n                } else {\n                    _log('Fullscreen not supported and fallback disabled');\n                }\n\n                // Toggle state\n                if (plyr.buttons && plyr.buttons.fullscreen) {\n                    _toggleState(plyr.buttons.fullscreen, false);\n                }\n\n                // Setup focus trap\n                _focusTrap();\n            }\n        }\n\n        // Setup captions\n        function _setupCaptions() {\n            // Bail if not HTML5 video\n            if (plyr.type !== 'video') {\n                return;\n            }\n\n            // Inject the container\n            if (!_getElement(config.selectors.captions)) {\n                plyr.videoContainer.insertAdjacentHTML('afterbegin', '<div class=\"' + _getClassname(config.selectors.captions) + '\"></div>');\n            }\n\n            // Determine if HTML5 textTracks is supported\n            plyr.usingTextTracks = false;\n            if (plyr.media.textTracks) {\n                plyr.usingTextTracks = true;\n            }\n\n            // Get URL of caption file if exists\n            var captionSrc = '',\n                kind,\n                children = plyr.media.childNodes;\n\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].nodeName.toLowerCase() === 'track') {\n                    kind = children[i].kind;\n                    if (kind === 'captions' || kind === 'subtitles') {\n                        captionSrc = children[i].getAttribute('src');\n                    }\n                }\n            }\n\n            // Record if caption file exists or not\n            plyr.captionExists = true;\n            if (captionSrc === '') {\n                plyr.captionExists = false;\n                _log('No caption track found');\n            } else {\n                _log('Caption track found; URI: ' + captionSrc);\n            }\n\n            // If no caption file exists, hide container for caption text\n            if (!plyr.captionExists) {\n                _toggleClass(plyr.container, config.classes.captions.enabled);\n            } else {\n                // Turn off native caption rendering to avoid double captions\n                // This doesn't seem to work in Safari 7+, so the <track> elements are removed from the dom below\n                var tracks = plyr.media.textTracks;\n                for (var x = 0; x < tracks.length; x++) {\n                    tracks[x].mode = 'hidden';\n                }\n\n                // Enable UI\n                _showCaptions(plyr);\n\n                // Disable unsupported browsers than report false positive\n                // Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1033144\n                if ((plyr.browser.isIE && plyr.browser.version >= 10) || (plyr.browser.isFirefox && plyr.browser.version >= 31)) {\n                    // Debugging\n                    _log('Detected browser with known TextTrack issues - using manual fallback');\n\n                    // Set to false so skips to 'manual' captioning\n                    plyr.usingTextTracks = false;\n                }\n\n                // Rendering caption tracks\n                // Native support required - http://caniuse.com/webvtt\n                if (plyr.usingTextTracks) {\n                    _log('TextTracks supported');\n\n                    for (var y = 0; y < tracks.length; y++) {\n                        var track = tracks[y];\n\n                        if (track.kind === 'captions' || track.kind === 'subtitles') {\n                            _on(track, 'cuechange', function() {\n                                // Display a cue, if there is one\n                                if (this.activeCues[0] && 'text' in this.activeCues[0]) {\n                                    _setCaption(this.activeCues[0].getCueAsHTML());\n                                } else {\n                                    _setCaption();\n                                }\n                            });\n                        }\n                    }\n                } else {\n                    // Caption tracks not natively supported\n                    _log('TextTracks not supported so rendering captions manually');\n\n                    // Render captions from array at appropriate time\n                    plyr.currentCaption = '';\n                    plyr.captions = [];\n\n                    if (captionSrc !== '') {\n                        // Create XMLHttpRequest Object\n                        var xhr = new XMLHttpRequest();\n\n                        xhr.onreadystatechange = function() {\n                            if (xhr.readyState === 4) {\n                                if (xhr.status === 200) {\n                                    var captions = [],\n                                        caption,\n                                        req = xhr.responseText;\n\n                                    //According to webvtt spec, line terminator consists of one of the following\n                                    // CRLF (U+000D U+000A), LF (U+000A) or CR (U+000D)\n                                    var lineSeparator = '\\r\\n';\n                                    if (req.indexOf(lineSeparator + lineSeparator) === -1) {\n                                        if (req.indexOf('\\r\\r') !== -1) {\n                                            lineSeparator = '\\r';\n                                        } else {\n                                            lineSeparator = '\\n';\n                                        }\n                                    }\n\n                                    captions = req.split(lineSeparator + lineSeparator);\n\n                                    for (var r = 0; r < captions.length; r++) {\n                                        caption = captions[r];\n                                        plyr.captions[r] = [];\n\n                                        // Get the parts of the captions\n                                        var parts = caption.split(lineSeparator),\n                                            index = 0;\n\n                                        // Incase caption numbers are added\n                                        if (parts[index].indexOf(':') === -1) {\n                                            index = 1;\n                                        }\n\n                                        plyr.captions[r] = [parts[index], parts[index + 1]];\n                                    }\n\n                                    // Remove first element ('VTT')\n                                    plyr.captions.shift();\n\n                                    _log('Successfully loaded the caption file via AJAX');\n                                } else {\n                                    _warn(config.logPrefix + 'There was a problem loading the caption file via AJAX');\n                                }\n                            }\n                        };\n\n                        xhr.open('get', captionSrc, true);\n\n                        xhr.send();\n                    }\n                }\n            }\n        }\n\n        // Set the current caption\n        function _setCaption(caption) {\n            /* jshint unused:false */\n            var container = _getElement(config.selectors.captions),\n                content = document.createElement('span');\n\n            // Empty the container\n            container.innerHTML = '';\n\n            // Default to empty\n            if (_is.undefined(caption)) {\n                caption = '';\n            }\n\n            // Set the span content\n            if (_is.string(caption)) {\n                content.innerHTML = caption.trim();\n            } else {\n                content.appendChild(caption);\n            }\n\n            // Set new caption text\n            container.appendChild(content);\n\n            // Force redraw (for Safari)\n            var redraw = container.offsetHeight;\n        }\n\n        // Captions functions\n        // Seek the manual caption time and update UI\n        function _seekManualCaptions(time) {\n            // Utilities for caption time codes\n            function _timecodeCommon(tc, pos) {\n                var tcpair = [];\n                tcpair = tc.split(' --> ');\n                for (var i = 0; i < tcpair.length; i++) {\n                    // WebVTT allows for extra meta data after the timestamp line\n                    // So get rid of this if it exists\n                    tcpair[i] = tcpair[i].replace(/(\\d+:\\d+:\\d+\\.\\d+).*/, '$1');\n                }\n                return _subTcSecs(tcpair[pos]);\n            }\n            function _timecodeMin(tc) {\n                return _timecodeCommon(tc, 0);\n            }\n            function _timecodeMax(tc) {\n                return _timecodeCommon(tc, 1);\n            }\n            function _subTcSecs(tc) {\n                if (tc === null || tc === undefined) {\n                    return 0;\n                } else {\n                    var tc1 = [],\n                        tc2 = [],\n                        seconds;\n                    tc1 = tc.split(',');\n                    tc2 = tc1[0].split(':');\n                    seconds = Math.floor(tc2[0] * 60 * 60) + Math.floor(tc2[1] * 60) + Math.floor(tc2[2]);\n                    return seconds;\n                }\n            }\n\n            // If it's not video, or we're using textTracks, bail.\n            if (plyr.usingTextTracks || plyr.type !== 'video' || !plyr.supported.full) {\n                return;\n            }\n\n            // Reset subcount\n            plyr.subcount = 0;\n\n            // Check time is a number, if not use currentTime\n            // IE has a bug where currentTime doesn't go to 0\n            // https://twitter.com/Sam_Potts/status/573715746506731521\n            time = _is.number(time) ? time : plyr.media.currentTime;\n\n            // If there's no subs available, bail\n            if (!plyr.captions[plyr.subcount]) {\n                return;\n            }\n\n            while (_timecodeMax(plyr.captions[plyr.subcount][0]) < time.toFixed(1)) {\n                plyr.subcount++;\n                if (plyr.subcount > plyr.captions.length - 1) {\n                    plyr.subcount = plyr.captions.length - 1;\n                    break;\n                }\n            }\n\n            // Check if the next caption is in the current time range\n            if (\n                plyr.media.currentTime.toFixed(1) >= _timecodeMin(plyr.captions[plyr.subcount][0]) &&\n                plyr.media.currentTime.toFixed(1) <= _timecodeMax(plyr.captions[plyr.subcount][0])\n            ) {\n                plyr.currentCaption = plyr.captions[plyr.subcount][1];\n\n                // Render the caption\n                _setCaption(plyr.currentCaption);\n            } else {\n                _setCaption();\n            }\n        }\n\n        // Display captions container and button (for initialization)\n        function _showCaptions() {\n            // If there's no caption toggle, bail\n            if (!plyr.buttons.captions) {\n                return;\n            }\n\n            _toggleClass(plyr.container, config.classes.captions.enabled, true);\n\n            // Try to load the value from storage\n            var active = plyr.storage.captionsEnabled;\n\n            // Otherwise fall back to the default config\n            if (!_is.boolean(active)) {\n                active = config.captions.defaultActive;\n            }\n\n            if (active) {\n                _toggleClass(plyr.container, config.classes.captions.active, true);\n                _toggleState(plyr.buttons.captions, true);\n            }\n        }\n\n        // Find all elements\n        function _getElements(selector) {\n            return plyr.container.querySelectorAll(selector);\n        }\n\n        // Find a single element\n        function _getElement(selector) {\n            return _getElements(selector)[0];\n        }\n\n        // Determine if we're in an iframe\n        function _inFrame() {\n            try {\n                return window.self !== window.top;\n            } catch (e) {\n                return true;\n            }\n        }\n\n        // Trap focus inside container\n        function _focusTrap() {\n            var tabbables = _getElements('input:not([disabled]), button:not([disabled])'),\n                first = tabbables[0],\n                last = tabbables[tabbables.length - 1];\n\n            function _checkFocus(event) {\n                // If it is TAB\n                if (event.which === 9 && plyr.isFullscreen) {\n                    if (event.target === last && !event.shiftKey) {\n                        // Move focus to first element that can be tabbed if Shift isn't used\n                        event.preventDefault();\n                        first.focus();\n                    } else if (event.target === first && event.shiftKey) {\n                        // Move focus to last element that can be tabbed if Shift is used\n                        event.preventDefault();\n                        last.focus();\n                    }\n                }\n            }\n\n            // Bind the handler\n            _on(plyr.container, 'keydown', _checkFocus);\n        }\n\n        // Add elements to HTML5 media (source, tracks, etc)\n        function _insertChildElements(type, attributes) {\n            if (_is.string(attributes)) {\n                _insertElement(type, plyr.media, { src: attributes });\n            } else if (attributes.constructor === Array) {\n                for (var i = attributes.length - 1; i >= 0; i--) {\n                    _insertElement(type, plyr.media, attributes[i]);\n                }\n            }\n        }\n\n        // Insert controls\n        function _injectControls() {\n            // Sprite\n            if (config.loadSprite) {\n                var iconUrl = _getIconUrl();\n\n                // Only load external sprite using AJAX\n                if (iconUrl.absolute) {\n                    _log('AJAX loading absolute SVG sprite' + (plyr.browser.isIE ? ' (due to IE)' : ''));\n                    loadSprite(iconUrl.url, 'sprite-plyr');\n                } else {\n                    _log('Sprite will be used as external resource directly');\n                }\n            }\n\n            // Make a copy of the html\n            var html = config.html;\n\n            // Insert custom video controls\n            _log('Injecting custom controls');\n\n            // If no controls are specified, create default\n            if (!html) {\n                html = _buildControls();\n            }\n\n            // Replace seek time instances\n            html = _replaceAll(html, '{seektime}', config.seekTime);\n\n            // Replace all id references with random numbers\n            html = _replaceAll(html, '{id}', Math.floor(Math.random() * 10000));\n\n            // Replace Title, if it exists\n            if (config.title) {\n                html = _replaceAll(html, '{title}', config.title);\n            }\n\n            // Controls container\n            var target;\n\n            // Inject to custom location\n            if (_is.string(config.selectors.controls.container)) {\n                target = document.querySelector(config.selectors.controls.container);\n            }\n\n            // Inject into the container by default\n            if (!_is.htmlElement(target)) {\n                target = plyr.container;\n            }\n\n            // Inject controls HTML\n            target.insertAdjacentHTML('beforeend', html);\n\n            // Setup tooltips\n            if (config.tooltips.controls) {\n                var labels = _getElements([config.selectors.controls.wrapper, ' ', config.selectors.labels, ' .', config.classes.hidden].join(''));\n\n                for (var i = labels.length - 1; i >= 0; i--) {\n                    var label = labels[i];\n\n                    _toggleClass(label, config.classes.hidden, false);\n                    _toggleClass(label, config.classes.tooltip, true);\n                }\n            }\n        }\n\n        // Find the UI controls and store references\n        function _findElements() {\n            try {\n                plyr.controls = _getElement(config.selectors.controls.wrapper);\n\n                // Buttons\n                plyr.buttons = {};\n                plyr.buttons.seek = _getElement(config.selectors.buttons.seek);\n                plyr.buttons.play = _getElements(config.selectors.buttons.play);\n                plyr.buttons.pause = _getElement(config.selectors.buttons.pause);\n                plyr.buttons.restart = _getElement(config.selectors.buttons.restart);\n                plyr.buttons.rewind = _getElement(config.selectors.buttons.rewind);\n                plyr.buttons.forward = _getElement(config.selectors.buttons.forward);\n                plyr.buttons.fullscreen = _getElement(config.selectors.buttons.fullscreen);\n\n                // Inputs\n                plyr.buttons.mute = _getElement(config.selectors.buttons.mute);\n                plyr.buttons.captions = _getElement(config.selectors.buttons.captions);\n\n                // Progress\n                plyr.progress = {};\n                plyr.progress.container = _getElement(config.selectors.progress.container);\n\n                // Progress - Buffering\n                plyr.progress.buffer = {};\n                plyr.progress.buffer.bar = _getElement(config.selectors.progress.buffer);\n                plyr.progress.buffer.text = plyr.progress.buffer.bar && plyr.progress.buffer.bar.getElementsByTagName('span')[0];\n\n                // Progress - Played\n                plyr.progress.played = _getElement(config.selectors.progress.played);\n\n                // Seek tooltip\n                plyr.progress.tooltip = plyr.progress.container && plyr.progress.container.querySelector('.' + config.classes.tooltip);\n\n                // Volume\n                plyr.volume = {};\n                plyr.volume.input = _getElement(config.selectors.volume.input);\n                plyr.volume.display = _getElement(config.selectors.volume.display);\n\n                // Timing\n                plyr.duration = _getElement(config.selectors.duration);\n                plyr.currentTime = _getElement(config.selectors.currentTime);\n                plyr.seekTime = _getElements(config.selectors.seekTime);\n\n                return true;\n            } catch (e) {\n                _warn('It looks like there is a problem with your controls HTML');\n\n                // Restore native video controls\n                _toggleNativeControls(true);\n\n                return false;\n            }\n        }\n\n        // Toggle style hook\n        function _toggleStyleHook() {\n            _toggleClass(plyr.container, config.selectors.container.replace('.', ''), plyr.supported.full);\n        }\n\n        // Toggle native controls\n        function _toggleNativeControls(toggle) {\n            if (toggle && _inArray(config.types.html5, plyr.type)) {\n                plyr.media.setAttribute('controls', '');\n            } else {\n                plyr.media.removeAttribute('controls');\n            }\n        }\n\n        // Setup aria attribute for play and iframe title\n        function _setTitle(iframe) {\n            // Find the current text\n            var label = config.i18n.play;\n\n            // If there's a media title set, use that for the label\n            if (_is.string(config.title) && config.title.length) {\n                label += ', ' + config.title;\n\n                // Set container label\n                plyr.container.setAttribute('aria-label', config.title);\n            }\n\n            // If there's a play button, set label\n            if (plyr.supported.full && plyr.buttons.play) {\n                for (var i = plyr.buttons.play.length - 1; i >= 0; i--) {\n                    plyr.buttons.play[i].setAttribute('aria-label', label);\n                }\n            }\n\n            // Set iframe title\n            // https://github.com/sampotts/plyr/issues/124\n            if (_is.htmlElement(iframe)) {\n                iframe.setAttribute('title', config.i18n.frameTitle.replace('{title}', config.title));\n            }\n        }\n\n        // Setup localStorage\n        function _setupStorage() {\n            var value = null;\n            plyr.storage = {};\n\n            // Bail if we don't have localStorage support or it's disabled\n            if (!_storage.supported || !config.storage.enabled) {\n                return;\n            }\n\n            // Clean up old volume\n            // https://github.com/sampotts/plyr/issues/171\n            window.localStorage.removeItem('plyr-volume');\n\n            // load value from the current key\n            value = window.localStorage.getItem(config.storage.key);\n\n            if (!value) {\n                // Key wasn't set (or had been cleared), move along\n                return;\n            } else if (/^\\d+(\\.\\d+)?$/.test(value)) {\n                // If value is a number, it's probably volume from an older\n                // version of plyr. See: https://github.com/sampotts/plyr/pull/313\n                // Update the key to be JSON\n                _updateStorage({ volume: parseFloat(value) });\n            } else {\n                // Assume it's JSON from this or a later version of plyr\n                plyr.storage = JSON.parse(value);\n            }\n        }\n\n        // Save a value back to local storage\n        function _updateStorage(value) {\n            // Bail if we don't have localStorage support or it's disabled\n            if (!_storage.supported || !config.storage.enabled) {\n                return;\n            }\n\n            // Update the working copy of the values\n            _extend(plyr.storage, value);\n\n            // Update storage\n            window.localStorage.setItem(config.storage.key, JSON.stringify(plyr.storage));\n        }\n\n        // Setup media\n        function _setupMedia() {\n            // If there's no media, bail\n            if (!plyr.media) {\n                _warn('No media element found!');\n                return;\n            }\n\n            if (plyr.supported.full) {\n                // Add type class\n                _toggleClass(plyr.container, config.classes.type.replace('{0}', plyr.type), true);\n\n                // Add video class for embeds\n                // This will require changes if audio embeds are added\n                if (_inArray(config.types.embed, plyr.type)) {\n                    _toggleClass(plyr.container, config.classes.type.replace('{0}', 'video'), true);\n                }\n\n                // If there's no autoplay attribute, assume the video is stopped and add state class\n                _toggleClass(plyr.container, config.classes.stopped, config.autoplay);\n\n                // Add iOS class\n                _toggleClass(plyr.container, config.classes.isIos, plyr.browser.isIos);\n\n                // Add touch class\n                _toggleClass(plyr.container, config.classes.isTouch, plyr.browser.isTouch);\n\n                // Inject the player wrapper\n                if (plyr.type === 'video') {\n                    // Create the wrapper div\n                    var wrapper = document.createElement('div');\n                    wrapper.setAttribute('class', config.classes.videoWrapper);\n\n                    // Wrap the video in a container\n                    _wrap(plyr.media, wrapper);\n\n                    // Cache the container\n                    plyr.videoContainer = wrapper;\n                }\n            }\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                _setupEmbed();\n            }\n        }\n\n        // Setup YouTube/Vimeo\n        function _setupEmbed() {\n            var container = document.createElement('div'),\n                mediaId,\n                mediaUrl,\n                id = plyr.type + '-' + Math.floor(Math.random() * 10000);\n\n            // Parse IDs from URLs if supplied\n            switch (plyr.type) {\n                case 'youtube':\n                    mediaId = _parseYouTubeId(plyr.embedId);\n                    break;\n\n                case 'vimeo':\n                    mediaId = _parseVimeoId(plyr.embedId);\n                    break;\n\n                default:\n                    mediaId = plyr.embedId;\n            }\n\n            // Remove old containers\n            var containers = _getElements('[id^=\"' + plyr.type + '-\"]');\n            for (var i = containers.length - 1; i >= 0; i--) {\n                _remove(containers[i]);\n            }\n\n            // Add embed class for responsive\n            _toggleClass(plyr.media, config.classes.videoWrapper, true);\n            _toggleClass(plyr.media, config.classes.embedWrapper, true);\n\n            if (plyr.type === 'youtube') {\n                // Create the YouTube container\n                plyr.media.appendChild(container);\n\n                // Set ID\n                container.setAttribute('id', id);\n\n                // Setup API\n                if (_is.object(window.YT)) {\n                    _youTubeReady(mediaId, container);\n                } else {\n                    // Load the API\n                    _injectScript(config.urls.youtube.api);\n\n                    // Setup callback for the API\n                    window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n                    // Add to queue\n                    window.onYouTubeReadyCallbacks.push(function() {\n                        _youTubeReady(mediaId, container);\n                    });\n\n                    // Set callback to process queue\n                    window.onYouTubeIframeAPIReady = function() {\n                        window.onYouTubeReadyCallbacks.forEach(function(callback) {\n                            callback();\n                        });\n                    };\n                }\n            } else if (plyr.type === 'vimeo') {\n                // Vimeo needs an extra div to hide controls on desktop (which has full support)\n                if (plyr.supported.full) {\n                    plyr.media.appendChild(container);\n                } else {\n                    container = plyr.media;\n                }\n\n                // Set ID\n                container.setAttribute('id', id);\n\n                // Load the API if not already\n                if (!_is.object(window.Vimeo)) {\n                    _injectScript(config.urls.vimeo.api);\n\n                    // Wait for fragaloop load\n                    var vimeoTimer = window.setInterval(function() {\n                        if (_is.object(window.Vimeo)) {\n                            window.clearInterval(vimeoTimer);\n                            _vimeoReady(mediaId, container);\n                        }\n                    }, 50);\n                } else {\n                    _vimeoReady(mediaId, container);\n                }\n            } else if (plyr.type === 'soundcloud') {\n                // TODO: Currently unsupported and undocumented\n                // Inject the iframe\n                var soundCloud = document.createElement('iframe');\n\n                // Watch for iframe load\n                soundCloud.loaded = false;\n                _on(soundCloud, 'load', function() {\n                    soundCloud.loaded = true;\n                });\n\n                _setAttributes(soundCloud, {\n                    src: 'https://w.soundcloud.com/player/?url=https://api.soundcloud.com/tracks/' + mediaId,\n                    id: id,\n                });\n\n                container.appendChild(soundCloud);\n                plyr.media.appendChild(container);\n\n                // Load the API if not already\n                if (!window.SC) {\n                    _injectScript(config.urls.soundcloud.api);\n                }\n\n                // Wait for SC load\n                var soundCloudTimer = window.setInterval(function() {\n                    if (window.SC && soundCloud.loaded) {\n                        window.clearInterval(soundCloudTimer);\n                        _soundcloudReady.call(soundCloud);\n                    }\n                }, 50);\n            }\n        }\n\n        // When embeds are ready\n        function _embedReady() {\n            // Setup the UI and call ready if full support\n            if (plyr.supported.full) {\n                _setupInterface();\n                _ready();\n            }\n\n            // Set title\n            _setTitle(_getElement('iframe'));\n        }\n\n        // Handle YouTube API ready\n        function _youTubeReady(videoId, container) {\n            // Setup instance\n            // https://developers.google.com/youtube/iframe_api_reference\n            plyr.embed = new window.YT.Player(container.id, {\n                videoId: videoId,\n                playerVars: {\n                    autoplay: config.autoplay ? 1 : 0,\n                    controls: plyr.supported.full ? 0 : 1,\n                    rel: 0,\n                    showinfo: 0,\n                    iv_load_policy: 3,\n                    cc_load_policy: config.captions.defaultActive ? 1 : 0,\n                    cc_lang_pref: 'en',\n                    wmode: 'transparent',\n                    modestbranding: 1,\n                    disablekb: 1,\n                    origin: '*', // https://code.google.com/p/gdata-issues/issues/detail?id=5788#c45\n                },\n                events: {\n                    onError: function(event) {\n                        _triggerEvent(plyr.container, 'error', true, {\n                            code: event.data,\n                            embed: event.target,\n                        });\n                    },\n                    onReady: function(event) {\n                        // Get the instance\n                        var instance = event.target;\n\n                        // Create a faux HTML5 API using the YouTube API\n                        plyr.media.play = function() {\n                            instance.playVideo();\n                            plyr.media.paused = false;\n                        };\n                        plyr.media.pause = function() {\n                            instance.pauseVideo();\n                            plyr.media.paused = true;\n                        };\n                        plyr.media.stop = function() {\n                            instance.stopVideo();\n                            plyr.media.paused = true;\n                        };\n                        plyr.media.duration = instance.getDuration();\n                        plyr.media.paused = true;\n                        plyr.media.currentTime = 0;\n                        plyr.media.muted = instance.isMuted();\n\n                        // Set title if possible\n                        if (typeof instance.getVideoData === 'function') {\n                            config.title = instance.getVideoData().title;\n                        }\n\n                        // Set the tabindex\n                        if (plyr.supported.full) {\n                            plyr.media.querySelector('iframe').setAttribute('tabindex', '-1');\n                        }\n\n                        // Update UI\n                        _embedReady();\n\n                        // Trigger timeupdate\n                        _triggerEvent(plyr.media, 'timeupdate');\n\n                        // Trigger timeupdate\n                        _triggerEvent(plyr.media, 'durationchange');\n\n                        // Reset timer\n                        window.clearInterval(timers.buffering);\n\n                        // Setup buffering\n                        timers.buffering = window.setInterval(function() {\n                            // Get loaded % from YouTube\n                            plyr.media.buffered = instance.getVideoLoadedFraction();\n\n                            // Trigger progress only when we actually buffer something\n                            if (plyr.media.lastBuffered === null || plyr.media.lastBuffered < plyr.media.buffered) {\n                                _triggerEvent(plyr.media, 'progress');\n                            }\n\n                            // Set last buffer point\n                            plyr.media.lastBuffered = plyr.media.buffered;\n\n                            // Bail if we're at 100%\n                            if (plyr.media.buffered === 1) {\n                                window.clearInterval(timers.buffering);\n\n                                // Trigger event\n                                _triggerEvent(plyr.media, 'canplaythrough');\n                            }\n                        }, 200);\n                    },\n                    onStateChange: function(event) {\n                        // Get the instance\n                        var instance = event.target;\n\n                        // Reset timer\n                        window.clearInterval(timers.playing);\n\n                        // Handle events\n                        // -1   Unstarted\n                        // 0    Ended\n                        // 1    Playing\n                        // 2    Paused\n                        // 3    Buffering\n                        // 5    Video cued\n                        switch (event.data) {\n                            case 0:\n                                plyr.media.paused = true;\n                                _triggerEvent(plyr.media, 'ended');\n                                break;\n\n                            case 1:\n                                plyr.media.paused = false;\n\n                                // If we were seeking, fire seeked event\n                                if (plyr.media.seeking) {\n                                    _triggerEvent(plyr.media, 'seeked');\n                                }\n\n                                plyr.media.seeking = false;\n                                _triggerEvent(plyr.media, 'play');\n                                _triggerEvent(plyr.media, 'playing');\n\n                                // Poll to get playback progress\n                                timers.playing = window.setInterval(function() {\n                                    // Set the current time\n                                    plyr.media.currentTime = instance.getCurrentTime();\n\n                                    // Trigger timeupdate\n                                    _triggerEvent(plyr.media, 'timeupdate');\n                                }, 100);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (plyr.media.duration !== instance.getDuration()) {\n                                    plyr.media.duration = instance.getDuration();\n                                    _triggerEvent(plyr.media, 'durationchange');\n                                }\n\n                                break;\n\n                            case 2:\n                                plyr.media.paused = true;\n                                _triggerEvent(plyr.media, 'pause');\n                                break;\n                        }\n\n                        _triggerEvent(plyr.container, 'statechange', false, {\n                            code: event.data,\n                        });\n                    },\n                },\n            });\n        }\n\n        // Vimeo ready\n        function _vimeoReady(mediaId, container) {\n            // Setup instance\n            // https://github.com/vimeo/player.js\n\n            var options = {\n                loop: config.loop,\n                autoplay: config.autoplay,\n                byline: false,\n                portrait: false,\n                title: false,\n                speed: true,\n                transparent: 0,\n            };\n\n            // Convert options into URL params for iframe\n            function buildUrlParameters(options) {\n                return Object.keys(options)\n                    .map(function(key) {\n                        return encodeURIComponent(key) + '=' + encodeURIComponent(options[key]);\n                    })\n                    .join('&');\n            }\n\n            // Get Vimeo params for the iframe\n            var params = buildUrlParameters(options);\n\n            // Build an iframe\n            var iframe = document.createElement('iframe');\n            var src = 'https://player.vimeo.com/video/' + mediaId + '?' + params;\n            iframe.setAttribute('src', src);\n            iframe.setAttribute('allowfullscreen', '');\n            container.appendChild(iframe);\n\n            plyr.embed = new window.Vimeo.Player(iframe);\n\n            // Create a faux HTML5 API using the Vimeo API\n            plyr.media.play = function() {\n                plyr.embed.play();\n                plyr.media.paused = false;\n            };\n            plyr.media.pause = function() {\n                plyr.embed.pause();\n                plyr.media.paused = true;\n            };\n            plyr.media.stop = function() {\n                plyr.embed.stop();\n                plyr.media.paused = true;\n            };\n\n            plyr.media.paused = true;\n            plyr.media.currentTime = 0;\n\n            // Update UI\n            _embedReady();\n\n            plyr.embed.getCurrentTime().then(function(value) {\n                plyr.media.currentTime = value;\n\n                // Trigger timeupdate\n                _triggerEvent(plyr.media, 'timeupdate');\n            });\n\n            plyr.embed.getDuration().then(function(value) {\n                plyr.media.duration = value;\n\n                // Trigger timeupdate\n                _triggerEvent(plyr.media, 'durationchange');\n            });\n\n            // TODO: Captions\n            /*if (config.captions.defaultActive) {\n                plyr.embed.enableTextTrack('en');\n            }*/\n\n            plyr.embed.on('loaded', function() {\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                if (_is.htmlElement(plyr.embed.element) && plyr.supported.full) {\n                    plyr.embed.element.setAttribute('tabindex', '-1');\n                }\n            });\n\n            plyr.embed.on('play', function() {\n                plyr.media.paused = false;\n                _triggerEvent(plyr.media, 'play');\n                _triggerEvent(plyr.media, 'playing');\n            });\n\n            plyr.embed.on('pause', function() {\n                plyr.media.paused = true;\n                _triggerEvent(plyr.media, 'pause');\n            });\n\n            plyr.embed.on('timeupdate', function(data) {\n                plyr.media.seeking = false;\n                plyr.media.currentTime = data.seconds;\n                _triggerEvent(plyr.media, 'timeupdate');\n            });\n\n            plyr.embed.on('progress', function(data) {\n                plyr.media.buffered = data.percent;\n                _triggerEvent(plyr.media, 'progress');\n\n                if (parseInt(data.percent) === 1) {\n                    // Trigger event\n                    _triggerEvent(plyr.media, 'canplaythrough');\n                }\n            });\n\n            plyr.embed.on('seeked', function() {\n                plyr.media.seeking = false;\n                _triggerEvent(plyr.media, 'seeked');\n                _triggerEvent(plyr.media, 'play');\n            });\n\n            plyr.embed.on('ended', function() {\n                plyr.media.paused = true;\n                _triggerEvent(plyr.media, 'ended');\n            });\n        }\n\n        // Soundcloud ready\n        function _soundcloudReady() {\n            /* jshint validthis: true */\n            plyr.embed = window.SC.Widget(this);\n\n            // Setup on ready\n            plyr.embed.bind(window.SC.Widget.Events.READY, function() {\n                // Create a faux HTML5 API using the Soundcloud API\n                plyr.media.play = function() {\n                    plyr.embed.play();\n                    plyr.media.paused = false;\n                };\n                plyr.media.pause = function() {\n                    plyr.embed.pause();\n                    plyr.media.paused = true;\n                };\n                plyr.media.stop = function() {\n                    plyr.embed.seekTo(0);\n                    plyr.embed.pause();\n                    plyr.media.paused = true;\n                };\n\n                plyr.media.paused = true;\n                plyr.media.currentTime = 0;\n\n                plyr.embed.getDuration(function(value) {\n                    plyr.media.duration = value / 1000;\n\n                    // Update UI\n                    _embedReady();\n                });\n\n                plyr.embed.getPosition(function(value) {\n                    plyr.media.currentTime = value;\n\n                    // Trigger timeupdate\n                    _triggerEvent(plyr.media, 'timeupdate');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.PLAY, function() {\n                    plyr.media.paused = false;\n                    _triggerEvent(plyr.media, 'play');\n                    _triggerEvent(plyr.media, 'playing');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.PAUSE, function() {\n                    plyr.media.paused = true;\n                    _triggerEvent(plyr.media, 'pause');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.PLAY_PROGRESS, function(data) {\n                    plyr.media.seeking = false;\n                    plyr.media.currentTime = data.currentPosition / 1000;\n                    _triggerEvent(plyr.media, 'timeupdate');\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.LOAD_PROGRESS, function(data) {\n                    plyr.media.buffered = data.loadProgress;\n                    _triggerEvent(plyr.media, 'progress');\n\n                    if (parseInt(data.loadProgress) === 1) {\n                        // Trigger event\n                        _triggerEvent(plyr.media, 'canplaythrough');\n                    }\n                });\n\n                plyr.embed.bind(window.SC.Widget.Events.FINISH, function() {\n                    plyr.media.paused = true;\n                    _triggerEvent(plyr.media, 'ended');\n                });\n            });\n        }\n\n        // Play media\n        function _play() {\n            if ('play' in plyr.media) {\n                plyr.media.play();\n            }\n        }\n\n        // Pause media\n        function _pause() {\n            if ('pause' in plyr.media) {\n                plyr.media.pause();\n            }\n        }\n\n        // Toggle playback\n        function _togglePlay(toggle) {\n            // True toggle\n            if (!_is.boolean(toggle)) {\n                toggle = plyr.media.paused;\n            }\n\n            if (toggle) {\n                _play();\n            } else {\n                _pause();\n            }\n\n            return toggle;\n        }\n\n        // Rewind\n        function _rewind(seekTime) {\n            // Use default if needed\n            if (!_is.number(seekTime)) {\n                seekTime = config.seekTime;\n            }\n            _seek(plyr.media.currentTime - seekTime);\n        }\n\n        // Fast forward\n        function _forward(seekTime) {\n            // Use default if needed\n            if (!_is.number(seekTime)) {\n                seekTime = config.seekTime;\n            }\n            _seek(plyr.media.currentTime + seekTime);\n        }\n\n        // Seek to time\n        // The input parameter can be an event or a number\n        function _seek(input) {\n            var targetTime = 0,\n                paused = plyr.media.paused,\n                duration = _getDuration();\n\n            if (_is.number(input)) {\n                targetTime = input;\n            } else if (_is.object(input) && _inArray(['input', 'change'], input.type)) {\n                // It's the seek slider\n                // Seek to the selected time\n                targetTime = input.target.value / input.target.max * duration;\n            }\n\n            // Normalise targetTime\n            if (targetTime < 0) {\n                targetTime = 0;\n            } else if (targetTime > duration) {\n                targetTime = duration;\n            }\n\n            // Update seek range and progress\n            _updateSeekDisplay(targetTime);\n\n            // Set the current time\n            // Try/catch incase the media isn't set and we're calling seek() from source() and IE moans\n            try {\n                plyr.media.currentTime = targetTime.toFixed(4);\n            } catch (e) {}\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                switch (plyr.type) {\n                    case 'youtube':\n                        plyr.embed.seekTo(targetTime);\n                        break;\n\n                    case 'vimeo':\n                        // Round to nearest second for vimeo\n                        plyr.embed.setCurrentTime(targetTime.toFixed(0));\n                        break;\n\n                    case 'soundcloud':\n                        plyr.embed.seekTo(targetTime * 1000);\n                        break;\n                }\n\n                if (paused) {\n                    _pause();\n                }\n\n                // Trigger timeupdate\n                _triggerEvent(plyr.media, 'timeupdate');\n\n                // Set seeking flag\n                plyr.media.seeking = true;\n\n                // Trigger seeking\n                _triggerEvent(plyr.media, 'seeking');\n            }\n\n            // Logging\n            _log('Seeking to ' + plyr.media.currentTime + ' seconds');\n\n            // Special handling for 'manual' captions\n            _seekManualCaptions(targetTime);\n        }\n\n        // Get the duration (or custom if set)\n        function _getDuration() {\n            // It should be a number, but parse it just incase\n            var duration = parseInt(config.duration),\n                // True duration\n                mediaDuration = 0;\n\n            // Only if duration available\n            if (plyr.media.duration !== null && !isNaN(plyr.media.duration)) {\n                mediaDuration = plyr.media.duration;\n            }\n\n            // If custom duration is funky, use regular duration\n            return isNaN(duration) ? mediaDuration : duration;\n        }\n\n        // Check playing state\n        function _checkPlaying() {\n            _toggleClass(plyr.container, config.classes.playing, !plyr.media.paused);\n\n            _toggleClass(plyr.container, config.classes.stopped, plyr.media.paused);\n\n            _toggleControls(plyr.media.paused);\n        }\n\n        // Save scroll position\n        function _saveScrollPosition() {\n            scroll = {\n                x: window.pageXOffset || 0,\n                y: window.pageYOffset || 0,\n            };\n        }\n\n        // Restore scroll position\n        function _restoreScrollPosition() {\n            window.scrollTo(scroll.x, scroll.y);\n        }\n\n        // Toggle fullscreen\n        function _toggleFullscreen(event) {\n            // Check for native support\n            var nativeSupport = fullscreen.supportsFullScreen;\n\n            if (nativeSupport) {\n                // If it's a fullscreen change event, update the UI\n                if (event && event.type === fullscreen.fullScreenEventName) {\n                    plyr.isFullscreen = fullscreen.isFullScreen(plyr.container);\n                } else {\n                    // Else it's a user request to enter or exit\n                    if (!fullscreen.isFullScreen(plyr.container)) {\n                        // Save scroll position\n                        _saveScrollPosition();\n\n                        // Request full screen\n                        fullscreen.requestFullScreen(plyr.container);\n                    } else {\n                        // Bail from fullscreen\n                        fullscreen.cancelFullScreen();\n                    }\n\n                    // Check if we're actually full screen (it could fail)\n                    plyr.isFullscreen = fullscreen.isFullScreen(plyr.container);\n\n                    return;\n                }\n            } else {\n                // Otherwise, it's a simple toggle\n                plyr.isFullscreen = !plyr.isFullscreen;\n\n                // Bind/unbind escape key\n                document.body.style.overflow = plyr.isFullscreen ? 'hidden' : '';\n            }\n\n            // Set class hook\n            _toggleClass(plyr.container, config.classes.fullscreen.active, plyr.isFullscreen);\n\n            // Trap focus\n            _focusTrap(plyr.isFullscreen);\n\n            // Set button state\n            if (plyr.buttons && plyr.buttons.fullscreen) {\n                _toggleState(plyr.buttons.fullscreen, plyr.isFullscreen);\n            }\n\n            // Trigger an event\n            _triggerEvent(plyr.container, plyr.isFullscreen ? 'enterfullscreen' : 'exitfullscreen', true);\n\n            // Restore scroll position\n            if (!plyr.isFullscreen && nativeSupport) {\n                _restoreScrollPosition();\n            }\n        }\n\n        // Mute\n        function _toggleMute(muted) {\n            // If the method is called without parameter, toggle based on current value\n            if (!_is.boolean(muted)) {\n                muted = !plyr.media.muted;\n            }\n\n            // Set button state\n            _toggleState(plyr.buttons.mute, muted);\n\n            // Set mute on the player\n            plyr.media.muted = muted;\n\n            // If volume is 0 after unmuting, set to default\n            if (plyr.media.volume === 0) {\n                _setVolume(config.volume);\n            }\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                // YouTube\n                switch (plyr.type) {\n                    case 'youtube':\n                        plyr.embed[plyr.media.muted ? 'mute' : 'unMute']();\n                        break;\n\n                    case 'vimeo':\n                    case 'soundcloud':\n                        plyr.embed.setVolume(plyr.media.muted ? 0 : parseFloat(config.volume / config.volumeMax));\n                        break;\n                }\n\n                // Trigger volumechange for embeds\n                _triggerEvent(plyr.media, 'volumechange');\n            }\n        }\n\n        // Set volume\n        function _setVolume(volume) {\n            var max = config.volumeMax,\n                min = config.volumeMin;\n\n            // Load volume from storage if no value specified\n            if (_is.undefined(volume)) {\n                volume = plyr.storage.volume;\n            }\n\n            // Use config if all else fails\n            if (volume === null || isNaN(volume)) {\n                volume = config.volume;\n            }\n\n            // Maximum is volumeMax\n            if (volume > max) {\n                volume = max;\n            }\n            // Minimum is volumeMin\n            if (volume < min) {\n                volume = min;\n            }\n\n            // Set the player volume\n            plyr.media.volume = parseFloat(volume / max);\n\n            // Set the display\n            if (plyr.volume.display) {\n                plyr.volume.display.value = volume;\n            }\n\n            // Embeds\n            if (_inArray(config.types.embed, plyr.type)) {\n                switch (plyr.type) {\n                    case 'youtube':\n                        plyr.embed.setVolume(plyr.media.volume * 100);\n                        break;\n\n                    case 'vimeo':\n                    case 'soundcloud':\n                        plyr.embed.setVolume(plyr.media.volume);\n                        break;\n                }\n\n                // Trigger volumechange for embeds\n                _triggerEvent(plyr.media, 'volumechange');\n            }\n\n            // Toggle muted state\n            if (volume === 0) {\n                plyr.media.muted = true;\n            } else if (plyr.media.muted && volume > 0) {\n                _toggleMute();\n            }\n        }\n\n        // Increase volume\n        function _increaseVolume(step) {\n            var volume = plyr.media.muted ? 0 : plyr.media.volume * config.volumeMax;\n\n            if (!_is.number(step)) {\n                step = config.volumeStep;\n            }\n\n            _setVolume(volume + step);\n        }\n\n        // Decrease volume\n        function _decreaseVolume(step) {\n            var volume = plyr.media.muted ? 0 : plyr.media.volume * config.volumeMax;\n\n            if (!_is.number(step)) {\n                step = config.volumeStep;\n            }\n\n            _setVolume(volume - step);\n        }\n\n        // Update volume UI and storage\n        function _updateVolume() {\n            // Get the current volume\n            var volume = plyr.media.muted ? 0 : plyr.media.volume * config.volumeMax;\n\n            // Update the <input type=\"range\"> if present\n            if (plyr.supported.full) {\n                if (plyr.volume.input) {\n                    plyr.volume.input.value = volume;\n                }\n                if (plyr.volume.display) {\n                    plyr.volume.display.value = volume;\n                }\n            }\n\n            // Update the volume in storage\n            _updateStorage({ volume: volume });\n\n            // Toggle class if muted\n            _toggleClass(plyr.container, config.classes.muted, volume === 0);\n\n            // Update checkbox for mute state\n            if (plyr.supported.full && plyr.buttons.mute) {\n                _toggleState(plyr.buttons.mute, volume === 0);\n            }\n        }\n\n        // Toggle captions\n        function _toggleCaptions(show) {\n            // If there's no full support, or there's no caption toggle\n            if (!plyr.supported.full || !plyr.buttons.captions) {\n                return;\n            }\n\n            // If the method is called without parameter, toggle based on current value\n            if (!_is.boolean(show)) {\n                show = plyr.container.className.indexOf(config.classes.captions.active) === -1;\n            }\n\n            // Set global\n            plyr.captionsEnabled = show;\n\n            // Toggle state\n            _toggleState(plyr.buttons.captions, plyr.captionsEnabled);\n\n            // Add class hook\n            _toggleClass(plyr.container, config.classes.captions.active, plyr.captionsEnabled);\n\n            // Trigger an event\n            _triggerEvent(plyr.container, plyr.captionsEnabled ? 'captionsenabled' : 'captionsdisabled', true);\n\n            // Save captions state to localStorage\n            _updateStorage({ captionsEnabled: plyr.captionsEnabled });\n        }\n\n        // Check if media is loading\n        function _checkLoading(event) {\n            var loading = event.type === 'waiting';\n\n            // Clear timer\n            clearTimeout(timers.loading);\n\n            // Timer to prevent flicker when seeking\n            timers.loading = setTimeout(function() {\n                // Toggle container class hook\n                _toggleClass(plyr.container, config.classes.loading, loading);\n\n                // Show controls if loading, hide if done\n                _toggleControls(loading);\n            }, loading ? 250 : 0);\n        }\n\n        // Update <progress> elements\n        function _updateProgress(event) {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            var progress = plyr.progress.played,\n                value = 0,\n                duration = _getDuration();\n\n            if (event) {\n                switch (event.type) {\n                    // Video playing\n                    case 'timeupdate':\n                    case 'seeking':\n                        if (plyr.controls.pressed) {\n                            return;\n                        }\n\n                        value = _getPercentage(plyr.media.currentTime, duration);\n\n                        // Set seek range value only if it's a 'natural' time event\n                        if (event.type === 'timeupdate' && plyr.buttons.seek) {\n                            plyr.buttons.seek.value = value;\n                        }\n\n                        break;\n\n                    // Check buffer status\n                    case 'playing':\n                    case 'progress':\n                        progress = plyr.progress.buffer;\n                        value = (function() {\n                            var buffered = plyr.media.buffered;\n\n                            if (buffered && buffered.length) {\n                                // HTML5\n                                return _getPercentage(buffered.end(0), duration);\n                            } else if (_is.number(buffered)) {\n                                // YouTube returns between 0 and 1\n                                return buffered * 100;\n                            }\n\n                            return 0;\n                        })();\n\n                        break;\n                }\n            }\n\n            // Set values\n            _setProgress(progress, value);\n        }\n\n        // Set <progress> value\n        function _setProgress(progress, value) {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            // Default to 0\n            if (_is.undefined(value)) {\n                value = 0;\n            }\n            // Default to buffer or bail\n            if (_is.undefined(progress)) {\n                if (plyr.progress && plyr.progress.buffer) {\n                    progress = plyr.progress.buffer;\n                } else {\n                    return;\n                }\n            }\n\n            // One progress element passed\n            if (_is.htmlElement(progress)) {\n                progress.value = value;\n            } else if (progress) {\n                // Object of progress + text element\n                if (progress.bar) {\n                    progress.bar.value = value;\n                }\n                if (progress.text) {\n                    progress.text.innerHTML = value;\n                }\n            }\n        }\n\n        // Update the displayed time\n        function _updateTimeDisplay(time, element) {\n            // Bail if there's no duration display\n            if (!element) {\n                return;\n            }\n\n            // Fallback to 0\n            if (isNaN(time)) {\n                time = 0;\n            }\n\n            plyr.secs = parseInt(time % 60);\n            plyr.mins = parseInt((time / 60) % 60);\n            plyr.hours = parseInt((time / 60 / 60) % 60);\n\n            // Do we need to display hours?\n            var displayHours = parseInt((_getDuration() / 60 / 60) % 60) > 0;\n\n            // Ensure it's two digits. For example, 03 rather than 3.\n            plyr.secs = ('0' + plyr.secs).slice(-2);\n            plyr.mins = ('0' + plyr.mins).slice(-2);\n\n            // Render\n            element.innerHTML = (displayHours ? plyr.hours + ':' : '') + plyr.mins + ':' + plyr.secs;\n        }\n\n        // Show the duration on metadataloaded\n        function _displayDuration() {\n            if (!plyr.supported.full) {\n                return;\n            }\n\n            // Determine duration\n            var duration = _getDuration() || 0;\n\n            // If there's only one time display, display duration there\n            if (!plyr.duration && config.displayDuration && plyr.media.paused) {\n                _updateTimeDisplay(duration, plyr.currentTime);\n            }\n\n            // If there's a duration element, update content\n            if (plyr.duration) {\n                _updateTimeDisplay(duration, plyr.duration);\n            }\n\n            // Update the tooltip (if visible)\n            _updateSeekTooltip();\n        }\n\n        // Handle time change event\n        function _timeUpdate(event) {\n            // Duration\n            _updateTimeDisplay(plyr.media.currentTime, plyr.currentTime);\n\n            // Ignore updates while seeking\n            if (event && event.type === 'timeupdate' && plyr.media.seeking) {\n                return;\n            }\n\n            // Playing progress\n            _updateProgress(event);\n        }\n\n        // Update seek range and progress\n        function _updateSeekDisplay(time) {\n            // Default to 0\n            if (!_is.number(time)) {\n                time = 0;\n            }\n\n            var duration = _getDuration(),\n                value = _getPercentage(time, duration);\n\n            // Update progress\n            if (plyr.progress && plyr.progress.played) {\n                plyr.progress.played.value = value;\n            }\n\n            // Update seek range input\n            if (plyr.buttons && plyr.buttons.seek) {\n                plyr.buttons.seek.value = value;\n            }\n        }\n\n        // Update hover tooltip for seeking\n        function _updateSeekTooltip(event) {\n            var duration = _getDuration();\n\n            // Bail if setting not true\n            if (!config.tooltips.seek || !plyr.progress.container || duration === 0) {\n                return;\n            }\n\n            // Calculate percentage\n            var clientRect = plyr.progress.container.getBoundingClientRect(),\n                percent = 0,\n                visible = config.classes.tooltip + '--visible';\n\n            // Determine percentage, if already visible\n            if (!event) {\n                if (_hasClass(plyr.progress.tooltip, visible)) {\n                    percent = plyr.progress.tooltip.style.left.replace('%', '');\n                } else {\n                    return;\n                }\n            } else {\n                percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n            }\n\n            // Set bounds\n            if (percent < 0) {\n                percent = 0;\n            } else if (percent > 100) {\n                percent = 100;\n            }\n\n            // Display the time a click would seek to\n            _updateTimeDisplay(duration / 100 * percent, plyr.progress.tooltip);\n\n            // Set position\n            plyr.progress.tooltip.style.left = percent + '%';\n\n            // Show/hide the tooltip\n            // If the event is a moues in/out and percentage is inside bounds\n            if (event && _inArray(['mouseenter', 'mouseleave'], event.type)) {\n                _toggleClass(plyr.progress.tooltip, visible, event.type === 'mouseenter');\n            }\n        }\n\n        // Show the player controls in fullscreen mode\n        function _toggleControls(toggle) {\n            // Don't hide if config says not to, it's audio, or not ready or loading\n            if (!config.hideControls || plyr.type === 'audio') {\n                return;\n            }\n\n            var delay = 0,\n                isEnterFullscreen = false,\n                show = toggle,\n                loading = _hasClass(plyr.container, config.classes.loading);\n\n            // Default to false if no boolean\n            if (!_is.boolean(toggle)) {\n                if (toggle && toggle.type) {\n                    // Is the enter fullscreen event\n                    isEnterFullscreen = toggle.type === 'enterfullscreen';\n\n                    // Whether to show controls\n                    show = _inArray(['mousemove', 'touchstart', 'mouseenter', 'focus'], toggle.type);\n\n                    // Delay hiding on move events\n                    if (_inArray(['mousemove', 'touchmove'], toggle.type)) {\n                        delay = 2000;\n                    }\n\n                    // Delay a little more for keyboard users\n                    if (toggle.type === 'focus') {\n                        delay = 3000;\n                    }\n                } else {\n                    show = _hasClass(plyr.container, config.classes.hideControls);\n                }\n            }\n\n            // Clear timer every movement\n            window.clearTimeout(timers.hover);\n\n            // If the mouse is not over the controls, set a timeout to hide them\n            if (show || plyr.media.paused || loading) {\n                _toggleClass(plyr.container, config.classes.hideControls, false);\n\n                // Always show controls when paused or if touch\n                if (plyr.media.paused || loading) {\n                    return;\n                }\n\n                // Delay for hiding on touch\n                if (plyr.browser.isTouch) {\n                    delay = 3000;\n                }\n            }\n\n            // If toggle is false or if we're playing (regardless of toggle),\n            // then set the timer to hide the controls\n            if (!show || !plyr.media.paused) {\n                timers.hover = window.setTimeout(function() {\n                    // If the mouse is over the controls (and not entering fullscreen), bail\n                    if ((plyr.controls.pressed || plyr.controls.hover) && !isEnterFullscreen) {\n                        return;\n                    }\n\n                    _toggleClass(plyr.container, config.classes.hideControls, true);\n                }, delay);\n            }\n        }\n\n        // Add common function to retrieve media source\n        function _source(source) {\n            // If not null or undefined, parse it\n            if (!_is.undefined(source)) {\n                _updateSource(source);\n                return;\n            }\n\n            // Return the current source\n            var url;\n            switch (plyr.type) {\n                case 'youtube':\n                    url = plyr.embed.getVideoUrl();\n                    break;\n\n                case 'vimeo':\n                    plyr.embed.getVideoUrl.then(function(value) {\n                        url = value;\n                    });\n                    break;\n\n                case 'soundcloud':\n                    plyr.embed.getCurrentSound(function(object) {\n                        url = object.permalink_url;\n                    });\n                    break;\n\n                default:\n                    url = plyr.media.currentSrc;\n                    break;\n            }\n\n            return url || '';\n        }\n\n        // Update source\n        // Sources are not checked for support so be careful\n        function _updateSource(source) {\n            if (!_is.object(source) || !('sources' in source) || !source.sources.length) {\n                _warn('Invalid source format');\n                return;\n            }\n\n            // Remove ready class hook\n            _toggleClass(plyr.container, config.classes.ready, false);\n\n            // Pause playback\n            _pause();\n\n            // Update seek range and progress\n            _updateSeekDisplay();\n\n            // Reset buffer progress\n            _setProgress();\n\n            // Cancel current network requests\n            _cancelRequests();\n\n            // Setup new source\n            function setup() {\n                // Remove embed object\n                plyr.embed = null;\n\n                // Remove the old media\n                _remove(plyr.media);\n\n                // Remove video container\n                if (plyr.type === 'video' && plyr.videoContainer) {\n                    _remove(plyr.videoContainer);\n                }\n\n                // Reset class name\n                if (plyr.container) {\n                    plyr.container.removeAttribute('class');\n                }\n\n                // Set the type\n                if ('type' in source) {\n                    plyr.type = source.type;\n\n                    // Get child type for video (it might be an embed)\n                    if (plyr.type === 'video') {\n                        var firstSource = source.sources[0];\n\n                        if ('type' in firstSource && _inArray(config.types.embed, firstSource.type)) {\n                            plyr.type = firstSource.type;\n                        }\n                    }\n                }\n\n                // Check for support\n                plyr.supported = supported(plyr.type);\n\n                // Create new markup\n                switch (plyr.type) {\n                    case 'video':\n                        plyr.media = document.createElement('video');\n                        break;\n\n                    case 'audio':\n                        plyr.media = document.createElement('audio');\n                        break;\n\n                    case 'youtube':\n                    case 'vimeo':\n                    case 'soundcloud':\n                        plyr.media = document.createElement('div');\n                        plyr.embedId = source.sources[0].src;\n                        break;\n                }\n\n                // Inject the new element\n                _prependChild(plyr.container, plyr.media);\n\n                // Autoplay the new source?\n                if (_is.boolean(source.autoplay)) {\n                    config.autoplay = source.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (_inArray(config.types.html5, plyr.type)) {\n                    if (config.crossorigin) {\n                        plyr.media.setAttribute('crossorigin', '');\n                    }\n                    if (config.autoplay) {\n                        plyr.media.setAttribute('autoplay', '');\n                    }\n                    if ('poster' in source) {\n                        plyr.media.setAttribute('poster', source.poster);\n                    }\n                    if (config.loop) {\n                        plyr.media.setAttribute('loop', '');\n                    }\n                }\n\n                // Restore class hooks\n                _toggleClass(plyr.container, config.classes.fullscreen.active, plyr.isFullscreen);\n                _toggleClass(plyr.container, config.classes.captions.active, plyr.captionsEnabled);\n                _toggleStyleHook();\n\n                // Set new sources for html5\n                if (_inArray(config.types.html5, plyr.type)) {\n                    _insertChildElements('source', source.sources);\n                }\n\n                // Set up from scratch\n                _setupMedia();\n\n                // HTML5 stuff\n                if (_inArray(config.types.html5, plyr.type)) {\n                    // Setup captions\n                    if ('tracks' in source) {\n                        _insertChildElements('track', source.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    plyr.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (_inArray(config.types.html5, plyr.type) || (_inArray(config.types.embed, plyr.type) && !plyr.supported.full)) {\n                    // Setup interface\n                    _setupInterface();\n\n                    // Call ready\n                    _ready();\n                }\n\n                // Set aria title and iframe title\n                config.title = source.title;\n                _setTitle();\n            }\n\n            // Destroy instance adn wait for callback\n            // Vimeo throws a wobbly if you don't wait\n            _destroy(setup, false);\n        }\n\n        // Update poster\n        function _updatePoster(source) {\n            if (plyr.type === 'video') {\n                plyr.media.setAttribute('poster', source);\n            }\n        }\n\n        function onBodyClick() {\n            _toggleClass(_getElement('.' + config.classes.tabFocus), config.classes.tabFocus, false);\n        }\n\n        // Listen for control events\n        function _controlListeners() {\n            // IE doesn't support input event, so we fallback to change\n            var inputEvent = plyr.browser.isIE ? 'change' : 'input';\n\n            // Click play/pause helper\n            function togglePlay() {\n                var play = _togglePlay();\n\n                // Determine which buttons\n                var trigger = plyr.buttons[play ? 'play' : 'pause'],\n                    target = plyr.buttons[play ? 'pause' : 'play'];\n\n                // Get the last play button to account for the large play button\n                if (target) {\n                    if (target.length > 1) {\n                        target = target[target.length - 1];\n                    } else {\n                        target = target[0];\n                    }\n                }\n\n                // Setup focus and tab focus\n                if (target) {\n                    var hadTabFocus = _hasClass(trigger, config.classes.tabFocus);\n\n                    setTimeout(function() {\n                        target.focus();\n\n                        if (hadTabFocus) {\n                            _toggleClass(trigger, config.classes.tabFocus, false);\n                            _toggleClass(target, config.classes.tabFocus, true);\n                        }\n                    }, 100);\n                }\n            }\n\n            // Get the focused element\n            function getFocusElement() {\n                var focused = document.activeElement;\n\n                if (!focused || focused === document.body) {\n                    focused = null;\n                } else {\n                    focused = document.querySelector(':focus');\n                }\n\n                return focused;\n            }\n\n            // Get the key code for an event\n            function getKeyCode(event) {\n                return event.keyCode ? event.keyCode : event.which;\n            }\n\n            // Detect tab focus\n            function checkTabFocus(focused) {\n                for (var button in plyr.buttons) {\n                    var element = plyr.buttons[button];\n\n                    if (_is.nodeList(element)) {\n                        for (var i = 0; i < element.length; i++) {\n                            _toggleClass(element[i], config.classes.tabFocus, element[i] === focused);\n                        }\n                    } else {\n                        _toggleClass(element, config.classes.tabFocus, element === focused);\n                    }\n                }\n            }\n\n            // Keyboard shortcuts\n            if (config.keyboardShorcuts.focused) {\n                var last = null;\n\n                // Handle global presses\n                if (config.keyboardShorcuts.global) {\n                    _on(window, 'keydown keyup', function(event) {\n                        var code = getKeyCode(event),\n                            focused = getFocusElement(),\n                            allowed = [48, 49, 50, 51, 52, 53, 54, 56, 57, 75, 77, 70, 67],\n                            count = get().length;\n\n                        // Only handle global key press if there's only one player\n                        // and the key is in the allowed keys\n                        // and if the focused element is not editable (e.g. text input)\n                        // and any that accept key input http://webaim.org/techniques/keyboard/\n                        if (count === 1 && _inArray(allowed, code) && (!_is.htmlElement(focused) || !_matches(focused, config.selectors.editable))) {\n                            handleKey(event);\n                        }\n                    });\n                }\n\n                // Handle presses on focused\n                _on(plyr.container, 'keydown keyup', handleKey);\n            }\n\n            function handleKey(event) {\n                var code = getKeyCode(event),\n                    pressed = event.type === 'keydown',\n                    held = pressed && code === last;\n\n                // If the event is bubbled from the media element\n                // Firefox doesn't get the keycode for whatever reason\n                if (!_is.number(code)) {\n                    return;\n                }\n\n                // Seek by the number keys\n                function seekByKey() {\n                    // Get current duration\n                    var duration = plyr.media.duration;\n\n                    // Bail if we have no duration set\n                    if (!_is.number(duration)) {\n                        return;\n                    }\n\n                    // Divide the max duration into 10th's and times by the number value\n                    _seek(duration / 10 * (code - 48));\n                }\n\n                // Handle the key on keydown\n                // Reset on keyup\n                if (pressed) {\n                    // Which keycodes should we prevent default\n                    var preventDefault = [48, 49, 50, 51, 52, 53, 54, 56, 57, 32, 75, 38, 40, 77, 39, 37, 70, 67];\n\n                    // If the code is found prevent default (e.g. prevent scrolling for arrows)\n                    if (_inArray(preventDefault, code)) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n\n                    switch (code) {\n                        // 0-9\n                        case 48:\n                        case 49:\n                        case 50:\n                        case 51:\n                        case 52:\n                        case 53:\n                        case 54:\n                        case 55:\n                        case 56:\n                        case 57:\n                            if (!held) {\n                                seekByKey();\n                            }\n                            break;\n                        // Space and K key\n                        case 32:\n                        case 75:\n                            if (!held) {\n                                _togglePlay();\n                            }\n                            break;\n                        // Arrow up\n                        case 38:\n                            _increaseVolume();\n                            break;\n                        // Arrow down\n                        case 40:\n                            _decreaseVolume();\n                            break;\n                        // M key\n                        case 77:\n                            if (!held) {\n                                _toggleMute();\n                            }\n                            break;\n                        // Arrow forward\n                        case 39:\n                            _forward();\n                            break;\n                        // Arrow back\n                        case 37:\n                            _rewind();\n                            break;\n                        // F key\n                        case 70:\n                            _toggleFullscreen();\n                            break;\n                        // C key\n                        case 67:\n                            if (!held) {\n                                _toggleCaptions();\n                            }\n                            break;\n                    }\n\n                    // Escape is handle natively when in full screen\n                    // So we only need to worry about non native\n                    if (!fullscreen.supportsFullScreen && plyr.isFullscreen && code === 27) {\n                        _toggleFullscreen();\n                    }\n\n                    // Store last code for next cycle\n                    last = code;\n                } else {\n                    last = null;\n                }\n            }\n\n            // Focus/tab management\n            _on(window, 'keyup', function(event) {\n                var code = getKeyCode(event),\n                    focused = getFocusElement();\n\n                if (code === 9) {\n                    checkTabFocus(focused);\n                }\n            });\n            _on(document.body, 'click', onBodyClick);\n            for (var button in plyr.buttons) {\n                var element = plyr.buttons[button];\n\n                _on(element, 'blur', function() {\n                    _toggleClass(element, 'tab-focus', false);\n                });\n            }\n\n            // Play\n            _proxyListener(plyr.buttons.play, 'click', config.listeners.play, togglePlay);\n\n            // Pause\n            _proxyListener(plyr.buttons.pause, 'click', config.listeners.pause, togglePlay);\n\n            // Restart\n            _proxyListener(plyr.buttons.restart, 'click', config.listeners.restart, _seek);\n\n            // Rewind\n            _proxyListener(plyr.buttons.rewind, 'click', config.listeners.rewind, _rewind);\n\n            // Fast forward\n            _proxyListener(plyr.buttons.forward, 'click', config.listeners.forward, _forward);\n\n            // Seek\n            _proxyListener(plyr.buttons.seek, inputEvent, config.listeners.seek, _seek);\n\n            // Set volume\n            _proxyListener(plyr.volume.input, inputEvent, config.listeners.volume, function() {\n                _setVolume(plyr.volume.input.value);\n            });\n\n            // Mute\n            _proxyListener(plyr.buttons.mute, 'click', config.listeners.mute, _toggleMute);\n\n            // Fullscreen\n            _proxyListener(plyr.buttons.fullscreen, 'click', config.listeners.fullscreen, _toggleFullscreen);\n\n            // Handle user exiting fullscreen by escaping etc\n            if (fullscreen.supportsFullScreen) {\n                _on(document, fullscreen.fullScreenEventName, _toggleFullscreen);\n            }\n\n            // Captions\n            _proxyListener(plyr.buttons.captions, 'click', config.listeners.captions, _toggleCaptions);\n\n            // Seek tooltip\n            _on(plyr.progress.container, 'mouseenter mouseleave mousemove', _updateSeekTooltip);\n\n            // Toggle controls visibility based on mouse movement\n            if (config.hideControls) {\n                // Toggle controls on mouse events and entering fullscreen\n                _on(plyr.container, 'mouseenter mouseleave mousemove touchstart touchend touchcancel touchmove enterfullscreen', _toggleControls);\n\n                // Watch for cursor over controls so they don't hide when trying to interact\n                _on(plyr.controls, 'mouseenter mouseleave', function(event) {\n                    plyr.controls.hover = event.type === 'mouseenter';\n                });\n\n                // Watch for cursor over controls so they don't hide when trying to interact\n                _on(plyr.controls, 'mousedown mouseup touchstart touchend touchcancel', function(event) {\n                    plyr.controls.pressed = _inArray(['mousedown', 'touchstart'], event.type);\n                });\n\n                // Focus in/out on controls\n                _on(plyr.controls, 'focus blur', _toggleControls, true);\n            }\n\n            // Adjust volume on scroll\n            _on(plyr.volume.input, 'wheel', function(event) {\n                event.preventDefault();\n\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                var inverted = event.webkitDirectionInvertedFromDevice,\n                    step = config.volumeStep / 5;\n\n                // Scroll down (or up on natural) to decrease\n                if (event.deltaY < 0 || event.deltaX > 0) {\n                    if (inverted) {\n                        _decreaseVolume(step);\n                    } else {\n                        _increaseVolume(step);\n                    }\n                }\n\n                // Scroll up (or down on natural) to increase\n                if (event.deltaY > 0 || event.deltaX < 0) {\n                    if (inverted) {\n                        _increaseVolume(step);\n                    } else {\n                        _decreaseVolume(step);\n                    }\n                }\n            });\n        }\n\n        // Listen for media events\n        function _mediaListeners() {\n            // Time change on media\n            _on(plyr.media, 'timeupdate seeking', _timeUpdate);\n\n            // Update manual captions\n            _on(plyr.media, 'timeupdate', _seekManualCaptions);\n\n            // Display duration\n            _on(plyr.media, 'durationchange loadedmetadata', _displayDuration);\n\n            // Handle the media finishing\n            _on(plyr.media, 'ended', function() {\n                // Show poster on end\n                if (plyr.type === 'video' && config.showPosterOnEnd) {\n                    // Clear\n                    if (plyr.type === 'video') {\n                        _setCaption();\n                    }\n\n                    // Restart\n                    _seek();\n\n                    // Re-load media\n                    plyr.media.load();\n                }\n            });\n\n            // Check for buffer progress\n            _on(plyr.media, 'progress playing', _updateProgress);\n\n            // Handle native mute\n            _on(plyr.media, 'volumechange', _updateVolume);\n\n            // Handle native play/pause\n            _on(plyr.media, 'play pause ended', _checkPlaying);\n\n            // Loading\n            _on(plyr.media, 'waiting canplay seeked', _checkLoading);\n\n            // Click video\n            if (config.clickToPlay && plyr.type !== 'audio') {\n                // Re-fetch the wrapper\n                var wrapper = _getElement('.' + config.classes.videoWrapper);\n\n                // Bail if there's no wrapper (this should never happen)\n                if (!wrapper) {\n                    return;\n                }\n\n                // Set cursor\n                wrapper.style.cursor = 'pointer';\n\n                // On click play, pause ore restart\n                _on(wrapper, 'click', function() {\n                    // Touch devices will just show controls (if we're hiding controls)\n                    if (config.hideControls && plyr.browser.isTouch && !plyr.media.paused) {\n                        return;\n                    }\n\n                    if (plyr.media.paused) {\n                        _play();\n                    } else if (plyr.media.ended) {\n                        _seek();\n                        _play();\n                    } else {\n                        _pause();\n                    }\n                });\n            }\n\n            // Disable right click\n            if (config.disableContextMenu) {\n                _on(plyr.media, 'contextmenu', function(event) {\n                    event.preventDefault();\n                });\n            }\n\n            // Proxy events to container\n            // Bubble up key events for Edge\n            _on(plyr.media, config.events.concat(['keyup', 'keydown']).join(' '), function(event) {\n                _triggerEvent(plyr.container, event.type, true);\n            });\n        }\n\n        // Cancel current network requests\n        // See https://github.com/sampotts/plyr/issues/174\n        function _cancelRequests() {\n            if (!_inArray(config.types.html5, plyr.type)) {\n                return;\n            }\n\n            // Remove child sources\n            var sources = plyr.media.querySelectorAll('source');\n            for (var i = 0; i < sources.length; i++) {\n                _remove(sources[i]);\n            }\n\n            // Set blank video src attribute\n            // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n            // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n            plyr.media.setAttribute('src', config.blankUrl);\n\n            // Load the new empty source\n            // This will cancel existing requests\n            // See https://github.com/sampotts/plyr/issues/174\n            plyr.media.load();\n\n            // Debugging\n            _log('Cancelled network requests');\n        }\n\n        // Destroy an instance\n        // Event listeners are removed when elements are removed\n        // http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n        function _destroy(callback, restore) {\n            // Bail if the element is not initialized\n            if (!plyr.init) {\n                return null;\n            }\n\n            // Type specific stuff\n            switch (plyr.type) {\n                case 'youtube':\n                    // Clear timers\n                    window.clearInterval(timers.buffering);\n                    window.clearInterval(timers.playing);\n\n                    // Destroy YouTube API\n                    plyr.embed.destroy();\n\n                    // Clean up\n                    cleanUp();\n\n                    break;\n\n                case 'vimeo':\n                    // Destroy Vimeo API\n                    // then clean up (wait, to prevent postmessage errors)\n                    plyr.embed.unload().then(cleanUp);\n\n                    // Vimeo does not always return\n                    timers.cleanUp = window.setTimeout(cleanUp, 200);\n\n                    break;\n\n                case 'video':\n                case 'audio':\n                    // Restore native video controls\n                    _toggleNativeControls(true);\n\n                    // Clean up\n                    cleanUp();\n\n                    break;\n            }\n\n            function cleanUp() {\n                clearTimeout(timers.cleanUp);\n\n                // Default to restore original element\n                if (!_is.boolean(restore)) {\n                    restore = true;\n                }\n\n                // Callback\n                if (_is.function(callback)) {\n                    callback.call(original);\n                }\n\n                // Bail if we don't need to restore the original element\n                if (!restore) {\n                    return;\n                }\n\n                // Remove init flag\n                plyr.init = false;\n\n                // Replace the container with the original element provided\n                plyr.container.parentNode.replaceChild(original, plyr.container);\n\n                // Free container in order for GC to remove it and prevent memory leaks due to added events\n                plyr.container = null;\n\n                // Allow overflow (set on fullscreen)\n                document.body.style.overflow = '';\n\n                //remove events\n                _off(document.body, 'click', onBodyClick);\n\n                // Event\n                _triggerEvent(original, 'destroyed', true);\n            }\n        }\n\n        // Setup a player\n        function _init() {\n            // Bail if the element is initialized\n            if (plyr.init) {\n                return null;\n            }\n\n            // Setup the fullscreen api\n            fullscreen = _fullscreen();\n\n            // Sniff out the browser\n            plyr.browser = _browserSniff();\n\n            // Bail if nothing to setup\n            if (!_is.htmlElement(plyr.media)) {\n                return;\n            }\n\n            // Load saved settings from localStorage\n            _setupStorage();\n\n            // Set media type based on tag or data attribute\n            // Supported: video, audio, vimeo, youtube\n            var tagName = media.tagName.toLowerCase();\n            if (tagName === 'div') {\n                plyr.type = media.getAttribute('data-type');\n                plyr.embedId = media.getAttribute('data-video-id');\n\n                // Clean up\n                media.removeAttribute('data-type');\n                media.removeAttribute('data-video-id');\n            } else {\n                plyr.type = tagName;\n                config.crossorigin = media.getAttribute('crossorigin') !== null;\n                config.autoplay = config.autoplay || media.getAttribute('autoplay') !== null;\n                config.loop = config.loop || media.getAttribute('loop') !== null;\n            }\n\n            // Check for support\n            plyr.supported = supported(plyr.type);\n\n            // If no native support, bail\n            if (!plyr.supported.basic) {\n                return;\n            }\n\n            // Wrap media\n            plyr.container = _wrap(media, document.createElement('div'));\n\n            // Allow focus to be captured\n            plyr.container.setAttribute('tabindex', 0);\n\n            // Add style hook\n            _toggleStyleHook();\n\n            // Debug info\n            _log('' + plyr.browser.name + ' ' + plyr.browser.version);\n\n            // Setup media\n            _setupMedia();\n\n            // Setup interface\n            // If embed but not fully supported, setupInterface (to avoid flash of controls) and call ready now\n            if (_inArray(config.types.html5, plyr.type) || (_inArray(config.types.embed, plyr.type) && !plyr.supported.full)) {\n                // Setup UI\n                _setupInterface();\n\n                // Call ready\n                _ready();\n\n                // Set title on button and frame\n                _setTitle();\n            }\n\n            // Successful setup\n            plyr.init = true;\n        }\n\n        // Setup the UI\n        function _setupInterface() {\n            // Don't setup interface if no support\n            if (!plyr.supported.full) {\n                _warn('Basic support only', plyr.type);\n\n                // Remove controls\n                _remove(_getElement(config.selectors.controls.wrapper));\n\n                // Remove large play\n                _remove(_getElement(config.selectors.buttons.play));\n\n                // Restore native controls\n                _toggleNativeControls(true);\n\n                // Bail\n                return;\n            }\n\n            // Inject custom controls if not present\n            var controlsMissing = !_getElements(config.selectors.controls.wrapper).length;\n            if (controlsMissing) {\n                // Inject custom controls\n                _injectControls();\n            }\n\n            // Find the elements\n            if (!_findElements()) {\n                return;\n            }\n\n            // If the controls are injected, re-bind listeners for controls\n            if (controlsMissing) {\n                _controlListeners();\n            }\n\n            // Media element listeners\n            _mediaListeners();\n\n            // Remove native controls\n            _toggleNativeControls();\n\n            // Setup fullscreen\n            _setupFullscreen();\n\n            // Captions\n            _setupCaptions();\n\n            // Set volume\n            _setVolume();\n            _updateVolume();\n\n            // Reset time display\n            _timeUpdate();\n\n            // Update the UI\n            _checkPlaying();\n\n            // Display duration\n            _displayDuration();\n        }\n\n        api = {\n            getOriginal: function() {\n                return original;\n            },\n            getContainer: function() {\n                return plyr.container;\n            },\n            getEmbed: function() {\n                return plyr.embed;\n            },\n            getMedia: function() {\n                return plyr.media;\n            },\n            getType: function() {\n                return plyr.type;\n            },\n            getDuration: _getDuration,\n            getCurrentTime: function() {\n                return plyr.media.currentTime;\n            },\n            getVolume: function() {\n                return plyr.media.volume;\n            },\n            isMuted: function() {\n                return plyr.media.muted;\n            },\n            isReady: function() {\n                return _hasClass(plyr.container, config.classes.ready);\n            },\n            isLoading: function() {\n                return _hasClass(plyr.container, config.classes.loading);\n            },\n            isPaused: function() {\n                return plyr.media.paused;\n            },\n            on: function(event, callback) {\n                _on(plyr.container, event, callback);\n                return this;\n            },\n            play: _play,\n            pause: _pause,\n            stop: function() {\n                _pause();\n                _seek();\n            },\n            restart: _seek,\n            rewind: _rewind,\n            forward: _forward,\n            seek: _seek,\n            source: _source,\n            poster: _updatePoster,\n            setVolume: _setVolume,\n            togglePlay: _togglePlay,\n            toggleMute: _toggleMute,\n            toggleCaptions: _toggleCaptions,\n            toggleFullscreen: _toggleFullscreen,\n            toggleControls: _toggleControls,\n            isFullscreen: function() {\n                return plyr.isFullscreen || false;\n            },\n            support: function(mimeType) {\n                return _supportMime(plyr, mimeType);\n            },\n            destroy: _destroy,\n        };\n\n        // Everything done\n        function _ready() {\n            // Ready event at end of execution stack\n            window.setTimeout(function() {\n                _triggerEvent(plyr.media, 'ready');\n            }, 0);\n\n            // Set class hook on media element\n            _toggleClass(plyr.media, defaults.classes.setup, true);\n\n            // Set container class for ready\n            _toggleClass(plyr.container, config.classes.ready, true);\n\n            // Store a refernce to instance\n            plyr.media.plyr = api;\n\n            // Autoplay\n            if (config.autoplay) {\n                _play();\n            }\n        }\n\n        // Initialize instance\n        _init();\n\n        // If init failed, return null\n        if (!plyr.init) {\n            return null;\n        }\n\n        return api;\n    }\n\n    // Load a sprite\n    function loadSprite(url, id) {\n        var x = new XMLHttpRequest();\n\n        // If the id is set and sprite exists, bail\n        if (_is.string(id) && _is.htmlElement(document.querySelector('#' + id))) {\n            return;\n        }\n\n        // Create placeholder (to prevent loading twice)\n        var container = document.createElement('div');\n        container.setAttribute('hidden', '');\n        if (_is.string(id)) {\n            container.setAttribute('id', id);\n        }\n        document.body.insertBefore(container, document.body.childNodes[0]);\n\n        // Check for CORS support\n        if ('withCredentials' in x) {\n            x.open('GET', url, true);\n        } else {\n            return;\n        }\n\n        // Inject hidden div with sprite on load\n        x.onload = function() {\n            container.innerHTML = x.responseText;\n        };\n\n        x.send();\n    }\n\n    // Check for support\n    function supported(type) {\n        var browser = _browserSniff(),\n            isOldIE = browser.isIE && browser.version <= 9,\n            isIos = browser.isIos,\n            isIphone = browser.isIphone,\n            audioSupport = !!document.createElement('audio').canPlayType,\n            videoSupport = !!document.createElement('video').canPlayType,\n            basic = false,\n            full = false;\n\n        switch (type) {\n            case 'video':\n                basic = videoSupport;\n                full = basic && (!isOldIE && !isIphone);\n                break;\n\n            case 'audio':\n                basic = audioSupport;\n                full = basic && !isOldIE;\n                break;\n\n            // Vimeo does not seem to be supported on iOS via API\n            // Issue raised https://github.com/vimeo/player.js/issues/87\n            case 'vimeo':\n                basic = true;\n                full = !isOldIE && !isIos;\n                break;\n\n            case 'youtube':\n                basic = true;\n                full = !isOldIE && !isIos;\n\n                // YouTube seems to work on iOS 10+ on iPad\n                if (isIos && !isIphone && browser.version >= 10) {\n                    full = true;\n                }\n\n                break;\n\n            case 'soundcloud':\n                basic = true;\n                full = !isOldIE && !isIphone;\n                break;\n\n            default:\n                basic = audioSupport && videoSupport;\n                full = basic && !isOldIE;\n        }\n\n        return {\n            basic: basic,\n            full: full,\n        };\n    }\n\n    // Setup function\n    function setup(targets, options) {\n        // Get the players\n        var players = [],\n            instances = [],\n            selector = [defaults.selectors.html5, defaults.selectors.embed].join(',');\n\n        // Select the elements\n        if (_is.string(targets)) {\n            // String selector passed\n            targets = document.querySelectorAll(targets);\n        } else if (_is.htmlElement(targets)) {\n            // Single HTMLElement passed\n            targets = [targets];\n        } else if (!_is.nodeList(targets) && !_is.array(targets) && !_is.string(targets)) {\n            // No selector passed, possibly options as first argument\n            // If options are the first argument\n            if (_is.undefined(options) && _is.object(targets)) {\n                options = targets;\n            }\n\n            // Use default selector\n            targets = document.querySelectorAll(selector);\n        }\n\n        // Convert NodeList to array\n        if (_is.nodeList(targets)) {\n            targets = Array.prototype.slice.call(targets);\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!supported().basic || !targets.length) {\n            return false;\n        }\n\n        // Add to container list\n        function add(target, media) {\n            if (!_hasClass(media, defaults.classes.hook)) {\n                players.push({\n                    // Always wrap in a <div> for styling\n                    //container:  _wrap(media, document.createElement('div')),\n                    // Could be a container or the media itself\n                    target: target,\n                    // This should be the <video>, <audio> or <div> (YouTube/Vimeo)\n                    media: media,\n                });\n            }\n        }\n\n        // Check if the targets have multiple media elements\n        for (var i = 0; i < targets.length; i++) {\n            var target = targets[i];\n\n            // Get children\n            var children = target.querySelectorAll(selector);\n\n            // If there's more than one media element child, wrap them\n            if (children.length) {\n                for (var x = 0; x < children.length; x++) {\n                    add(target, children[x]);\n                }\n            } else if (_matches(target, selector)) {\n                // Target is media element\n                add(target, target);\n            }\n        }\n\n        // Create a player instance for each element\n        players.forEach(function(player) {\n            var element = player.target,\n                media = player.media,\n                match = false;\n\n            // The target element can also be the media element\n            if (media === element) {\n                match = true;\n            }\n\n            // Setup a player instance and add to the element\n            // Create instance-specific config\n            var data = {};\n\n            // Try parsing data attribute config\n            try {\n                data = JSON.parse(element.getAttribute('data-plyr'));\n            } catch (e) {}\n\n            var config = _extend({}, defaults, options, data);\n\n            // Bail if not enabled\n            if (!config.enabled) {\n                return null;\n            }\n\n            // Create new instance\n            var instance = new Plyr(media, config);\n\n            // Go to next if setup failed\n            if (!_is.object(instance)) {\n                return;\n            }\n\n            // Listen for events if debugging\n            if (config.debug) {\n                var events = config.events.concat(['setup', 'statechange', 'enterfullscreen', 'exitfullscreen', 'captionsenabled', 'captionsdisabled']);\n\n                _on(instance.getContainer(), events.join(' '), function(event) {\n                    console.log([config.logPrefix, 'event:', event.type].join(' '), event.detail.plyr);\n                });\n            }\n\n            // Callback\n            _event(instance.getContainer(), 'setup', true, {\n                plyr: instance,\n            });\n\n            // Add to return array even if it's already setup\n            instances.push(instance);\n        });\n\n        return instances;\n    }\n\n    // Get all instances within a provided container\n    function get(container) {\n        if (_is.string(container)) {\n            // Get selector if string passed\n            container = document.querySelector(container);\n        } else if (_is.undefined(container)) {\n            // Use body by default to get all on page\n            container = document.body;\n        }\n\n        // If we have a HTML element\n        if (_is.htmlElement(container)) {\n            var elements = container.querySelectorAll('.' + defaults.classes.setup),\n                instances = [];\n\n            Array.prototype.slice.call(elements).forEach(function(element) {\n                if (_is.object(element.plyr)) {\n                    instances.push(element.plyr);\n                }\n            });\n\n            return instances;\n        }\n\n        return [];\n    }\n\n    return {\n        setup: setup,\n        supported: supported,\n        loadSprite: loadSprite,\n        get: get,\n    };\n});\n\n// Custom event polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n(function() {\n    if (typeof window.CustomEvent === 'function') {\n        return;\n    }\n\n    function CustomEvent(event, params) {\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n})();\n","import PlyrVideo from './plyr-video.vue'\nimport PlyrYouTube from './plyr-youtube.vue'\nimport PlyrVimeo from './plyr-vimeo.vue'\n\nconst Components = [PlyrVideo, PlyrYouTube, PlyrVimeo]\n\nexport default Vue => {\n  Components.forEach((Component) => {\n    Vue.component(Component.name, Component)\n  })\n}","<template>\n    <video :id=\"`js-player-${this.idNumber}`\" class=\"video\" ref=\"video\" :poster=\"this.poster\">\n        <source v-for=\"(vid, index) in this.videos\" :key=\"index\" :src=\"vid.src\" :type=\"`video/${vid.format}`\" />\n        <track\n                v-if=\"this.subs\" kind=\"captions\" :label=\"this.subs.label\"\n                :src=\"this.subs.src\" :srclang=\"this.subs.srclang\" default\n        >\n    </video>\n</template>\n\n<script>\n  import plyr from 'plyr'\n  import 'plyr/dist/plyr.css'\n\n  export default {\n    name: 'plyr-video',\n    props: {\n      /** Link to poster to show when video hasn't played yet. */\n      poster: {\n        type: String,\n        required: true\n      },\n      /** Array of videos to include in the video source. */\n      videos: {\n        type: Array,\n        required: true,\n        validator: value => {\n          let valid = true\n          value.forEach((vid) => {\n            let hasProps = vid.hasOwnProperty('src') && vid.hasOwnProperty('format')\n            if (!hasProps) {\n              valid = false\n            }\n          })\n          return valid\n        }\n      },\n      /** Object for subtitles track */\n      subs: {\n        type: Object,\n        required: false,\n        validator: value => {\n          return value.hasOwnProperty('label') && value.hasOwnProperty('src') && value.hasOwnProperty('srclang')\n        }\n      }\n    },\n    data () {\n      return {\n        player: {}\n      }\n    },\n    mounted () {\n      this.player = plyr.setup(document.getElementById(`js-player-${this.idNumber}`))[0]\n    },\n    beforeDestroy () {\n      this.player.destroy()\n    },\n    computed: {\n      idNumber () {\n        return Math.floor(Math.random() * (100000 - 1)) + 1\n      }\n    }\n  }\n</script>\n","<template>\n    <div :class=\"`js-player-yt-${this.idNumber}`\" data-type=\"youtube\" :data-video-id=\"this.id\"></div>\n</template>\n\n<script>\n  import plyr from 'plyr'\n  import 'plyr/dist/plyr.css'\n\n  export default {\n    name: 'plyr-youtube',\n    props: {\n      /** Link or ID of youtube video. */\n      id: {\n        type: String,\n        required: true\n      }\n    },\n    data () {\n      return {\n        player: {}\n      }\n    },\n    mounted () {\n      this.player = plyr.setup(document.getElementById(`js-player-yt-${this.idNumber}`))[0]\n    },\n    beforeDestroy () {\n      this.player.destroy()\n    },\n    computed: {\n      idNumber () {\n        return Math.floor(Math.random() * (100000 - 1)) + 1\n      }\n    }\n  }\n</script>","<template>\n    <div :class=\"`js-player-vimeo-${this.idNumber}`\" data-type=\"vimeo\" :data-video-id=\"this.id\"></div>\n</template>\n\n<script>\n    import plyr from 'plyr'\n    import 'plyr/dist/plyr.css'\n\n    export default {\n      name: 'plyr-vimeo',\n      props: {\n        /** Link or ID of vimeo video. */\n        id: {\n          type: String,\n          required: true\n        }\n      },\n      data () {\n        return {\n          player: {}\n        }\n      },\n      mounted () {\n        this.player = plyr.setup(document.getElementById(`js-player-vimeo-${this.idNumber}`))[0]\n      },\n      beforeDestroy () {\n        this.player.destroy()\n      },\n      computed: {\n        idNumber () {\n          return Math.floor(Math.random() * (100000 - 1)) + 1\n        }\n      }\n    }\n</script>"],"names":["root","window","this","module","document","fullscreen","scroll","x","y","defaults","enabled","debug","autoplay","loop","seekTime","volume","volumeMin","volumeMax","volumeStep","duration","displayDuration","loadSprite","iconPrefix","iconUrl","blankUrl","clickToPlay","hideControls","showPosterOnEnd","disableContextMenu","keyboardShorcuts","focused","global","tooltips","controls","seek","selectors","html5","embed","editable","container","wrapper","labels","buttons","play","pause","restart","rewind","forward","mute","captions","input","display","progress","buffer","played","currentTime","classes","setup","ready","videoWrapper","embedWrapper","type","stopped","playing","muted","loading","hover","tooltip","hidden","isIos","isTouch","active","fallback","tabFocus","defaultActive","allowAudio","storage","key","i18n","buffered","toggleMute","toggleCaptions","toggleFullscreen","frameTitle","types","urls","vimeo","api","youtube","soundcloud","listeners","events","logPrefix","_browserSniff","nameOffset","verOffset","ix","ua","navigator","userAgent","name","appName","fullVersion","parseFloat","appVersion","majorVersion","parseInt","isIE","isFirefox","isChrome","isSafari","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","version","test","platform","isIphone","documentElement","_injectScript","source","querySelectorAll","length","tag","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","_inArray","haystack","needle","Array","prototype","_replaceAll","string","find","replace","RegExp","_wrap","elements","i","child","cloneNode","element","parent","sibling","nextSibling","appendChild","_remove","removeChild","_prependChild","firstChild","_setAttributes","attributes","setAttribute","_is","boolean","_insertElement","_toggleClass","className","state","classList","_hasClass","contains","_matches","selector","p","Element","f","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","s","call","_proxyListener","eventName","userListener","defaultListener","useCapture","_on","event","apply","_toggleListener","callback","toggle","eventList","split","NodeList","Node","arguments","_event","bubbles","properties","CustomEvent","detail","dispatchEvent","_toggleState","target","getAttribute","_getPercentage","current","max","toFixed","_extend","objects","destination","shift","property","constructor","Object","object","array","number","Number","String","nodeList","htmlElement","HTMLElement","function","undefined","_storage","supported","localStorage","setItem","result","getItem","removeItem","e","Plyr","media","config","plyr","timers","original","_triggerEvent","_console","args","console","slice","unshift","_log","_warn","_getIconUrl","url","absolute","browser","svg4everybody","_setupFullscreen","full","nativeSupport","supportsFullScreen","self","top","_inFrame","_focusTrap","_setupCaptions","_getElement","videoContainer","insertAdjacentHTML","usingTextTracks","textTracks","kind","captionSrc","children","childNodes","nodeName","captionExists","tracks","mode","captionsEnabled","_showCaptions","track","activeCues","_setCaption","getCueAsHTML","currentCaption","xhr","XMLHttpRequest","onreadystatechange","readyState","status","caption","req","responseText","lineSeparator","r","parts","index","open","send","content","innerHTML","trim","offsetHeight","_seekManualCaptions","time","_timecodeCommon","tc","pos","tcpair","tc1","tc2","Math","floor","_subTcSecs","_timecodeMax","subcount","_getElements","tabbables","first","last","which","isFullscreen","shiftKey","preventDefault","focus","_insertChildElements","_injectControls","html","iconPath","push","join","_buildControls","random","title","querySelector","label","_toggleStyleHook","_toggleNativeControls","removeAttribute","_setTitle","iframe","_updateStorage","value","JSON","stringify","_setupMedia","mediaId","id","embedId","match","$2","_parseVimeoId","containers","YT","_youTubeReady","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","forEach","Vimeo","_vimeoReady","vimeoTimer","setInterval","clearInterval","soundCloud","loaded","SC","soundCloudTimer","Widget","bind","Events","READY","paused","stop","seekTo","getDuration","_embedReady","getPosition","PLAY","PAUSE","PLAY_PROGRESS","data","seeking","currentPosition","LOAD_PROGRESS","loadProgress","FINISH","_setupEmbed","_setupInterface","_ready","videoId","Player","playerVars","rel","showinfo","iv_load_policy","cc_load_policy","cc_lang_pref","wmode","modestbranding","disablekb","origin","onError","code","onReady","instance","playVideo","pauseVideo","stopVideo","isMuted","getVideoData","buffering","getVideoLoadedFraction","lastBuffered","onStateChange","getCurrentTime","options","byline","portrait","speed","transparent","params","keys","map","encodeURIComponent","buildUrlParameters","then","on","seconds","percent","_play","_pause","_togglePlay","_rewind","_seek","_forward","targetTime","_getDuration","_updateSeekDisplay","setCurrentTime","mediaDuration","_checkPlaying","_toggleControls","_toggleFullscreen","fullScreenEventName","isFullScreen","cancelFullScreen","pageXOffset","pageYOffset","requestFullScreen","body","style","overflow","scrollTo","_toggleMute","_setVolume","setVolume","min","_increaseVolume","step","_decreaseVolume","_updateVolume","_toggleCaptions","show","_checkLoading","clearTimeout","setTimeout","_updateProgress","pressed","end","_setProgress","bar","text","_updateTimeDisplay","secs","mins","hours","displayHours","_displayDuration","_updateSeekTooltip","_timeUpdate","clientRect","getBoundingClientRect","visible","width","pageX","left","delay","isEnterFullscreen","_updateSource","sources","load","_cancelRequests","_destroy","firstSource","crossorigin","poster","onBodyClick","_controlListeners","inputEvent","togglePlay","trigger","hadTabFocus","getFocusElement","activeElement","getKeyCode","keyCode","count","get","handleKey","held","stopPropagation","button","checkTabFocus","inverted","webkitDirectionInvertedFromDevice","deltaY","deltaX","restore","init","destroy","cleanUp","unload","replaceChild","_off","controlsMissing","_findElements","cursor","ended","concat","_mediaListeners","getOriginal","getContainer","getEmbed","getMedia","getType","getVolume","isReady","isLoading","isPaused","getVideoUrl","getCurrentSound","permalink_url","currentSrc","toggleControls","support","mimeType","canPlayType","_supportMime","prefix","browserPrefixes","il","msExitFullscreen","msFullscreenEnabled","fullscreenElement","mozFullScreenElement","_fullscreen","parse","tagName","basic","_init","onload","isOldIE","audioSupport","videoSupport","instances","targets","players","add","hook","player","log","factory","cancelable","evt","createEvent","initCustomEvent","Event","Components","render","valid","vid","hasOwnProperty","getElementById","Vue","Component","component"],"mappings":"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"}